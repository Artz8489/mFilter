{"version":3,"sources":["_metronic/_partials/controls/forms/SelectField.js","app/views/app/shared-componets/filterdrawer.js","app/views/app/dashboard/index.jsx"],"names":["SelectField","React","forwardRef","props","label","placeholder","option","field","setFieldValue","values","form","touched","errors","options","name","className","onChange","e","value","find","connect","state","common","dashboard","setSideDrawer","hasPackageChanged","setFilterApiCall","brand_list","category_list","channel_list","priority_list","publisher_list","status_list","country_name","filter_list","setGlobalRefreshRendering","dispatch","onSubmit","packageName","localStorage","getItem","useDispatch","useState","panel","setPanel","selectedFilters","channel","undefined","category","category_counter","setCategoryCounter","country","country_counter","setCountryCounter","publisher","publishers_counter","setPublishersCounter","brand","brands_counter","setBrandsCounter","priority","priority_counter","setPriorityCounter","dashboarddata","channelInput","setChannelInput","categoryInput","setCategoryInput","brandInput","setBrandInput","countryInput","setCountryInput","priorityInput","setPriorityInput","publisherInput","setPublisherInput","statusInput","setStatusInput","flag","setFlag","categoryExpand","setCategoryExpand","publisherExpand","setPublisherExpand","countryExpand","setCountryExpand","brandExpand","setBrandExpand","priorityExpand","setPriorityExpand","statusExpand","setStatusExpand","toggleDrawer","useStyles","makeStyles","list","width","fullList","root","icon","verticalAlign","height","details","alignItems","column","fromDate","defaultEndDate","toDate","status","filters","setFilters","setSelectedFilters","unSelectedFilters","setUnSelectedFilters","date","Date","weekstartdate","setDate","getDate","startDate","setStartDate","endDate","setEndDate","classes","setItem","moment","format","getFormatredStartDate","defaultStartDate","didMount","useRef","useEffect","current","type","constant","getStartValue","getStartdateValue","getFilterApi","FetchFilterlist","FetchCountrylist","FetchCategorylist","FetchChannellist","FetchBrandlist","FetchPrioritylist","FetchPublisherlist","FetchStatuslist","getValuesFromArr","val","arr","data","length","map","x","push","localSelectedFilterValues","JSON","parse","getLocalStorage","FILTER_CATEGORY_SELECTED_VALUE","SELECTED","_","isEmpty","getBrand","getChannel","getCategory","getPublisher","getCountry","getPriorities","getStatus","Getchannelval","ser_channel","document","querySelector","input","lists","searchannelList","filter","channel_name","toLowerCase","includes","GetCatergoryVal","ser_category","searhcategorylist","getCategorySearch","GetPublisherVal","ser_publishers","searhpublisherlist","getPublisherSearch","GetBrandVal","ser_brands","searhbrandlist","getBrandSearch","GetPriorityVal","ser_priorities","searhprioritylist","getPrioritySearch","GetStatusVal","ser_status","searhstatuslist","getStatusSearch","GetCountryVal","ser_country","searhcountrylist","getCountrySearch","removeArrayElementFromArray","array","arrTwo","forEach","v","n","index","indexOf","splice","removeElement","updated","setUpdated","localData","updateLocalVal","mergedBrand","meregeCategory","meregeChannel","meregePriority","meregeCountry","meregePublisher","meregeStatus","selectedArr","hasChanged","Object","keys","sort","join","filteredBrand","filtereCategory","filteredCountry","filteredPublisher","filteredStatus","filteredChannel","filteredPriority","setLocalStorage","stringify","SET_GLOBAL_REFRESH_RENDERING","unSelectAll","filterName","preventDefault","tempSelected","item","tempcatSelected","temppublisherSelected","tempcountrySelected","tempbrandSelected","tempprioritySelected","tempstatusSelected","handleCheckbox","event","target","checked","prevState","anchor","open","onClose","style","initialValues","xs","sm","md","lg","xl","dateFormat","selected","removeLocalStorage","hadleDateChange","selectsStart","selectsEnd","minDate","expanded","expandIcon","onClick","aria-controls","id","disabled","src","toAbsoluteUrl","variant","aria-label","aria-describedby","onBlur","Append","Text","Group","controlId","children","package_name","toString","handleSubmit","Dashboard","channels","categories","publishers","countries","brands","priorities","gertStartDate","d","FetchTotalIncidents","FetchIncidentVolumes","FetchActivecasesbychannel","FetchSubchannel","FetchToptenLocation","FetchCategorlevelcount","FetchPublisherlevelcount","useSelector","dashboardData","incident_data","incidentloading","incidentvolume_data","incidentvolumne_data","incidentvolumeloading","incidentvolumneloading","activecasebychannel_data","activecases_data","activecaseloading","subchannel_data","subchannelloading","toptenlocation_data","toptenlocationloading","toptenlocation_loading","categorylevelcount_data","categorylevelcountloading","categorylevelcount_loading","publisherlevelcount_data","publisherlevelcountloading","publisherlevelcount_loading","barchartData","series","chart","toolbar","show","plotOptions","bar","horizontal","columnWidth","dataLabels","position","enabled","formatter","offsetY","fontSize","colors","stroke","xaxis","fill","opacity","tooltip","y","donutchartData","labels","states","hover","responsive","breakpoint","legend","subchannelChart","borderRadius","color","toptenLocationChart","incvoulume","i","count","inserted_date","activecases","a","b","subchannel","sub_channel_name","toptenlocation","location","gutter","class","animation","total","active","resolved","progress","maxWidth","overflowX","total_active_cases","maxHeight","overflowY","result","key","active_cases","now","FetchReport"],"mappings":"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","file":"static/js/36.a0d365c7.chunk.js","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\n\r\n\r\nconst SelectField = React.forwardRef((props) => {\r\n\r\n    const { label, placeholder, option, field, setFieldValue, values, form: { touched, errors } } = props;\r\n    const handleOnchange = (e) => {\r\n        setFieldValue(field.name, e.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <label>{label}</label>\r\n            <Select options={option} name={field.name} placeholder={placeholder}\r\n                className={touched[field.name] && errors[field.name] ? 'is-invalid' : values[field.name] ? 'is-valid' : \"\"}\r\n                onChange={(option) => handleOnchange(option)} value={field.value ? option.find(option => option.value === field.value) : ''} />\r\n            <span className=\"danger\">{touched[field.name] && errors[field.name]}</span>\r\n        </>\r\n    )\r\n});\r\n\r\nexport default SelectField;","/* eslint-disable react-hooks/rules-of-hooks */\r\n/* eslint-disable no-restricted-imports */\r\nimport React, { useState, useEffect, useReducer } from \"react\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { Formik, Field } from \"formik\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  InputGroup,\r\n  FormControl,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport SelectField from \"../../../../_metronic/_partials/controls/forms/SelectField\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Checkbox } from \"../../../../_metronic/_partials/controls\";\r\nimport clsx from \"clsx\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport * as constant from \"../../../../redux/constants/DashboardConstants\";\r\nimport { SET_GLOBAL_REFRESH_RENDERING } from \"../../../../redux/constants/CommonConstants\";\r\nimport {\r\n  FetchFilterlist,\r\n  FetchChannellist,\r\n  FetchCountrylist,\r\n  FetchCategorylist,\r\n  FetchBrandlist,\r\n  FetchPrioritylist,\r\n  FetchPublisherlist,\r\n  FetchStatuslist,\r\n} from \"../../../../redux/actions/CommonActions\";\r\nimport {\r\n  FetchTotalIncidents,\r\n  FetchIncidentVolumes,\r\n  FetchActivecasesbychannel,\r\n  FetchSubchannel,\r\n  FetchToptenLocation,\r\n  FetchCategorlevelcount,\r\n  FetchPublisherlevelcount,\r\n} from \"../../../../redux/actions/DashboardActions\";\r\nimport { FetchReport } from \"../../../../redux/actions/ReportActions\";\r\nimport { FILTER_CATEGORY_SELECTED_VALUE } from \"../../../utils/const\";\r\nimport {\r\n  setLocalStorage,\r\n  getLocalStorage,\r\n  removeLocalStorage,\r\n} from \"../../../utils/helpers\";\r\nimport { FetchDASHBOARDChannelData } from \"../../../../redux/actions/DashboardActions\";\r\nimport { toAbsoluteUrl } from \"../../../../../src/_metronic/_helpers/index\";\r\nimport moment from \"moment\";\r\nimport { connect } from \"react-redux\";\r\nimport _, { keyBy, map } from \"lodash\";\r\nimport SVG, { Props as SVGProps } from \"react-inlinesvg\";\r\n\r\nconst FilterDrawer = ({\r\n  setSideDrawer,\r\n  hasPackageChanged,\r\n  setFilterApiCall,\r\n  category_list,\r\n  channel_list,\r\n  priority_list,\r\n  publisher_list,\r\n  status_list,\r\n  country_name,\r\n  brand_list,\r\n  filter_list,\r\n  onSubmit,\r\n  setGlobalRefreshRendering,\r\n}) => {\r\n  const packageName = localStorage.getItem(\"dpackage\");\r\n  const dispatch = useDispatch();\r\n  const [panel, setPanel] = useState(false);\r\n\r\n  const [channel_counter, setChannelCounter] = useState(\r\n    selectedFilters?.channel && selectedFilters?.channel != undefined\r\n      ? selectedFilters?.channel\r\n      : \"0\"\r\n  );\r\n  const [category_counter, setCategoryCounter] = useState(\r\n    selectedFilters?.category\r\n  );\r\n  const [country_counter, setCountryCounter] = useState(\r\n    selectedFilters?.country\r\n  );\r\n  const [publishers_counter, setPublishersCounter] = useState(\r\n    selectedFilters?.publisher\r\n  );\r\n  const [brands_counter, setBrandsCounter] = useState(selectedFilters?.brand);\r\n  const [priority_counter, setPriorityCounter] = useState(\r\n    selectedFilters?.priority\r\n  );\r\n  const [status_counter, setStatusCounter] = useState(\r\n    selectedFilters?.publisher\r\n  );\r\n  const [dashboarddata, setDashboarddata] = useState({});\r\n\r\n  const [channelInput, setChannelInput] = useState(\"\");\r\n  const [categoryInput, setCategoryInput] = useState(\"\");\r\n  const [brandInput, setBrandInput] = useState(\"\");\r\n  const [countryInput, setCountryInput] = useState(\"\");\r\n  const [priorityInput, setPriorityInput] = useState(\"\");\r\n  const [publisherInput, setPublisherInput] = useState(\"\");\r\n  const [statusInput, setStatusInput] = useState(\"\");\r\n  const [flag, setFlag] = useState(false);\r\n  const [categoryExpand, setCategoryExpand] = useState(false);\r\n  const [publisherExpand, setPublisherExpand] = useState(false);\r\n  const [countryExpand, setCountryExpand] = useState(false);\r\n  const [brandExpand, setBrandExpand] = useState(false);\r\n  const [priorityExpand, setPriorityExpand] = useState(false);\r\n  const [statusExpand, setStatusExpand] = useState(false);\r\n\r\n  const fill = \"orange\";\r\n  const stroke = \"black\";\r\n  const toggleDrawer = (e) => {\r\n    setPanel(false);\r\n  };\r\n\r\n  const useStyles = makeStyles({\r\n    list: {\r\n      width: 250,\r\n    },\r\n    fullList: {\r\n      width: \"auto\",\r\n    },\r\n    root: {\r\n      // width: \"100%\",\r\n    },\r\n    icon: {\r\n      verticalAlign: \"bottom\",\r\n      height: 20,\r\n      width: 20,\r\n    },\r\n    details: {\r\n      alignItems: \"center\",\r\n    },\r\n    column: {\r\n      // flexBasis: \"33.33%\",\r\n    },\r\n  });\r\n  const [filters, setFilters] = useState({\r\n    packageName: \"\",\r\n    fromDate: defaultEndDate,\r\n    toDate: defaultEndDate,\r\n    brand: \"all\",\r\n    category: \"all\",\r\n    country: \"all\",\r\n    publisher: \"all\",\r\n    status: \"all\",\r\n    channel: \"all\",\r\n    priority: \"all\",\r\n  });\r\n  const [selectedFilters, setSelectedFilters] = useState({\r\n    brand: [],\r\n    category: [],\r\n    country: [],\r\n    publisher: [],\r\n    status: [],\r\n    channel: [],\r\n    priority: [],\r\n  });\r\n\r\n\r\n  const [unSelectedFilters, setUnSelectedFilters] = useState({\r\n    brand: [],\r\n    category: [],\r\n    country: [],\r\n    publisher: [],\r\n    status: [],\r\n    channel: [],\r\n    priority: [],\r\n  });\r\n  const date = new Date();\r\n  const weekstartdate = date.setDate(date.getDate() - 7);\r\n  const [startDate, setStartDate] = useState(weekstartdate);\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const classes = useStyles();\r\n\r\n  localStorage.setItem(\"endDate\", moment(endDate).format(\"YYYY-MM-DD\"));\r\n\r\n\r\n  const getFormatredStartDate = localStorage.getItem(\"startDate\");\r\n  const defaultStartDate = getFormatredStartDate\r\n    ? getFormatredStartDate\r\n    : moment(new Date(startDate)).format(\"YYYY-MM-DD\");\r\n\r\n\r\n  const defaultEndDate = localStorage.getItem(\"endDate\");\r\n  const didMount = React.useRef(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (\r\n        brand_list &&\r\n        country_name &&\r\n        priority_list &&\r\n        status_list &&\r\n        category_list &&\r\n        channel_list &&\r\n        publisher_list\r\n      ) {\r\n        setFilters((value) => ({\r\n          ...value,\r\n          brand: brand_list,\r\n          country: country_name,\r\n          priority: priority_list,\r\n          status: status_list,\r\n          category: category_list,\r\n          channel: channel_list,\r\n          publisher: publisher_list,\r\n        }));\r\n      }\r\n    },\r\n    [packageName]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (didMount.current && !panel) {\r\n      dispatch({ type: constant.SET_SIDE_DRAWER, setSideDrawer: false });\r\n      setPanel(setSideDrawer);\r\n    }\r\n    if (didMount.current) {\r\n      const getStartValue = localStorage.getItem(\"startDateValue\");\r\n      const getFormatredStartDate = localStorage.getItem(\"startDate\");\r\n      const getStartdateValue = getStartValue\r\n        ? new Date(getStartValue)\r\n        : weekstartdate;\r\n\r\n      if (!getStartValue) {\r\n        localStorage.setItem(\r\n          \"startDate\",\r\n          moment(weekstartdate).format(\"YYYY-MM-DD\")\r\n        );\r\n      }\r\n      setStartDate(getStartdateValue);\r\n    }\r\n  }, [panel, setSideDrawer]);\r\n\r\n  const getFilterApi = () => {\r\n    const getStartValue = localStorage.getItem(\"startDateValue\");\r\n    const getStartdateValue = getStartValue\r\n      ? moment(getStartValue).format(\"YYYY-MM-DD\")\r\n      : moment(weekstartdate).format(\"YYYY-MM-DD\");\r\n    dispatch(FetchFilterlist(packageName));\r\n    dispatch(FetchCountrylist(packageName, getStartdateValue, defaultEndDate));\r\n    dispatch(FetchCategorylist(packageName, getStartdateValue, defaultEndDate));\r\n    dispatch(FetchChannellist(packageName, getStartdateValue, defaultEndDate));\r\n    dispatch(FetchBrandlist(packageName, getStartdateValue, defaultEndDate));\r\n    dispatch(FetchPrioritylist(packageName, getStartdateValue, defaultEndDate));\r\n    dispatch(\r\n      FetchPublisherlist(packageName, getStartdateValue, defaultEndDate)\r\n    );\r\n    dispatch(FetchStatuslist(packageName, getStartdateValue, defaultEndDate));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (didMount.current && packageName) {\r\n      getFilterApi();\r\n    }\r\n  }, [packageName]);\r\n\r\n  useEffect(() => {\r\n    getFilterApi();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      brand_list &&\r\n      country_name &&\r\n      priority_list &&\r\n      status_list &&\r\n      category_list &&\r\n      channel_list &&\r\n      publisher_list\r\n    ) {\r\n      setFilters((value) => ({\r\n        ...value,\r\n        brand: brand_list,\r\n        country: country_name,\r\n        priority: priority_list,\r\n        status: status_list,\r\n        category: category_list,\r\n        channel: channel_list,\r\n        publisher: publisher_list,\r\n      }));\r\n\r\n      const getValuesFromArr = (val, name) => {\r\n        const arr = [];\r\n        if (val && val.data && val.data.length > 0) {\r\n          val.data.map((x) => {\r\n            if (x && x[name]) {\r\n              arr.push(x[name]);\r\n            }\r\n          });\r\n        }\r\n        return arr;\r\n      };\r\n\r\n      const localSelectedFilterValues = JSON.parse(\r\n        getLocalStorage(FILTER_CATEGORY_SELECTED_VALUE.SELECTED)\r\n      );\r\n      if (_.isEmpty(localSelectedFilterValues)) {\r\n        setSelectedFilters(() => ({\r\n          brand: getValuesFromArr(brand_list, \"brand\"),\r\n          country: getValuesFromArr(country_name, \"country\"),\r\n          priority: getValuesFromArr(priority_list, \"priority\"),\r\n          status: getValuesFromArr(status_list, \"status\"),\r\n          category: getValuesFromArr(category_list, \"category\"),\r\n          channel: getValuesFromArr(channel_list, \"channel_name\"),\r\n          publisher: getValuesFromArr(publisher_list, \"publisher\"),\r\n        }));\r\n      }\r\n    }\r\n  }, [\r\n    brand_list,\r\n    country_name,\r\n    priority_list,\r\n    status_list,\r\n    category_list,\r\n    channel_list,\r\n    publisher_list,\r\n  ]);\r\n\r\n  const getBrand =\r\n    filters && filters.brand && filters.brand.data && filters.brand.data\r\n      ? filters.brand.data\r\n      : [];\r\n\r\n  const getChannel =\r\n    filters && filters.channel && filters.channel.data && filters.channel.data\r\n      ? filters.channel.data\r\n      : [];\r\n\r\n  const getCategory =\r\n    filters &&\r\n    filters.category &&\r\n    filters.category.data &&\r\n    filters.category.data\r\n      ? filters.category.data\r\n      : [];\r\n\r\n  const getPublisher =\r\n    filters &&\r\n    filters.publisher &&\r\n    filters.publisher.data &&\r\n    filters.publisher.data\r\n      ? filters.publisher.data\r\n      : [];\r\n\r\n  const getCountry =\r\n    filters && filters.country && filters.country.data && filters.country.data\r\n      ? filters.country.data\r\n      : [];\r\n\r\n  const getPriorities =\r\n    filters &&\r\n    filters.priority &&\r\n    filters.priority.data &&\r\n    filters.priority.data\r\n      ? filters.priority.data\r\n      : [];\r\n\r\n  const getStatus =\r\n    filters && filters.status && filters.status.data && filters.status.data\r\n      ? filters.status.data\r\n      : [];\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLocalStorage(\r\n      FILTER_CATEGORY_SELECTED_VALUE.SELECTED,\r\n      JSON.stringify(selectedFilters)\r\n    );\r\n\r\n    const data = {\r\n      package_name: packageName,\r\n      fromDate: defaultStartDate,\r\n      toDate: defaultEndDate,\r\n      country:\r\n        (selectedFilters?.country && selectedFilters?.country.length > 25) ||\r\n        (selectedFilters?.country && selectedFilters?.country.length == 0) ||\r\n        selectedFilters?.country == undefined ||\r\n        selectedFilters?.country.length == searhcountrylist.length\r\n          ? \"all\"\r\n          : selectedFilters?.country?.toString(),\r\n\r\n      category:\r\n        (selectedFilters?.category && selectedFilters?.category.length > 25) ||\r\n        (selectedFilters?.category && selectedFilters?.category.length == 0) ||\r\n        selectedFilters?.category == undefined ||\r\n        selectedFilters?.category.length == searhcategorylist.length\r\n          ? \"all\"\r\n          : selectedFilters?.category?.toString(),\r\n\r\n      publisher:\r\n        (selectedFilters?.publisher &&\r\n          selectedFilters?.publisher.length > 25) ||\r\n        (selectedFilters?.publisher &&\r\n          selectedFilters?.publisher.length == 0) ||\r\n        selectedFilters?.publisher == undefined ||\r\n        selectedFilters?.publisher.length == searhpublisherlist.length\r\n          ? \"all\"\r\n          : selectedFilters?.publisher?.toString(),\r\n    \r\n      channel:\r\n        (selectedFilters?.channel && selectedFilters?.channel.length > 25) ||\r\n        (selectedFilters?.channel && selectedFilters?.channel.length == 0) ||\r\n        selectedFilters?.channel == undefined ||\r\n        selectedFilters?.channel.length == searchannelList.length\r\n          ? \"all\"\r\n          : selectedFilters?.channel?.toString(),\r\n   \r\n\r\n      brand:\r\n        (selectedFilters?.brand && selectedFilters?.brand.length > 25) ||\r\n        (selectedFilters?.brand && selectedFilters?.brand.length == 0) ||\r\n        selectedFilters?.brand == undefined ||\r\n        selectedFilters?.brand.length == searhbrandlist.length\r\n          ? \"all\"\r\n          : selectedFilters?.brand?.toString(),\r\n      status:\r\n        (selectedFilters?.status && selectedFilters?.status.length > 25) ||\r\n        (selectedFilters?.status && selectedFilters?.status.length == 0) ||\r\n        selectedFilters?.status == undefined ||\r\n        selectedFilters?.status.length == searhstatuslist.length\r\n          ? \"all\"\r\n          : selectedFilters?.status?.toString(),\r\n      priority:\r\n        (selectedFilters?.priority && selectedFilters?.priority.length > 25) ||\r\n        (selectedFilters?.priority && selectedFilters?.priority.length == 0) ||\r\n        selectedFilters?.priority == undefined ||\r\n        selectedFilters?.priority.length == searhprioritylist.length\r\n          ? \"all\"\r\n          : selectedFilters?.priority?.toString(),\r\n    };\r\n    onSubmit(data);\r\n    toggleDrawer();\r\n  };\r\n\r\n  const hadleDateChange = (date) => {\r\n    localStorage.setItem(\"startDate\", moment(date).format(\"YYYY-MM-DD\"));\r\n    localStorage.setItem(\"startDateValue\", date);\r\n    removeLocalStorage(FILTER_CATEGORY_SELECTED_VALUE.SELECTED);\r\n    setStartDate(date);\r\n    dispatch(FetchFilterlist(packageName));\r\n    dispatch(\r\n      FetchCountrylist(\r\n        packageName,\r\n        moment(date).format(\"YYYY-MM-DD\"),\r\n        defaultEndDate\r\n      )\r\n    );\r\n    dispatch(\r\n      FetchCategorylist(\r\n        packageName,\r\n        moment(date).format(\"YYYY-MM-DD\"),\r\n        defaultEndDate\r\n      )\r\n    );\r\n    dispatch(\r\n      FetchChannellist(\r\n        packageName,\r\n        moment(date).format(\"YYYY-MM-DD\"),\r\n        defaultEndDate\r\n      )\r\n    );\r\n    dispatch(\r\n      FetchBrandlist(\r\n        packageName,\r\n        moment(date).format(\"YYYY-MM-DD\"),\r\n        defaultEndDate\r\n      )\r\n    );\r\n    dispatch(\r\n      FetchPrioritylist(\r\n        packageName,\r\n        moment(date).format(\"YYYY-MM-DD\"),\r\n        defaultEndDate\r\n      )\r\n    );\r\n    dispatch(\r\n      FetchPublisherlist(\r\n        packageName,\r\n        moment(date).format(\"YYYY-MM-DD\"),\r\n        defaultEndDate\r\n      )\r\n    );\r\n    dispatch(\r\n      FetchStatuslist(\r\n        packageName,\r\n        moment(date).format(\"YYYY-MM-DD\"),\r\n        defaultEndDate\r\n      )\r\n    );\r\n  };\r\n\r\n  function Getchannelval() {\r\n    let ser_channel = document.querySelector(\"#channel\").value;\r\n    setChannelInput(ser_channel);\r\n  }\r\n\r\n  const channel_search_list = getChannel;\r\n  const getchannelSearch = (input, lists) => {\r\n    if (!input) {\r\n      return lists;\r\n    }\r\n\r\n    return lists.filter((val) =>\r\n      val.channel_name.toLowerCase()?.includes(input.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const searchannelList = getchannelSearch(channelInput, channel_search_list);\r\n\r\n  // },[searchannelList,searhcategorylist,searhbrandlist,searhpublisherlist,searhprioritylist]);\r\n\r\n  ////\r\n\r\n  function GetCatergoryVal() {\r\n    let ser_category = document.querySelector(\"#category\").value;\r\n\r\n    setCategoryInput(ser_category);\r\n  }\r\n\r\n  const category_search_list = getCategory;\r\n\r\n  const getCategorySearch = (input, lists) => {\r\n    if (!input) {\r\n      return lists;\r\n    }\r\n\r\n    return lists.filter((val) =>\r\n      val.category.toLowerCase()?.includes(input.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const searhcategorylist = getCategorySearch(\r\n    categoryInput,\r\n    category_search_list\r\n  );\r\n\r\n  ////\r\n\r\n  function GetPublisherVal() {\r\n    let ser_publishers = document.querySelector(\"#publisher\").value;\r\n\r\n    setPublisherInput(ser_publishers);\r\n  }\r\n\r\n  const publisher_search_list = getPublisher;\r\n\r\n  const getPublisherSearch = (input, lists) => {\r\n    if (!input) {\r\n      return lists;\r\n    }\r\n\r\n    return lists.filter((val) =>\r\n      val.publisher.toLowerCase()?.includes(input.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const searhpublisherlist = getPublisherSearch(\r\n    publisherInput,\r\n    publisher_search_list\r\n  );\r\n\r\n  ////\r\n\r\n  function GetBrandVal() {\r\n    let ser_brands = document.querySelector(\"#brand\").value;\r\n\r\n    setBrandInput(ser_brands);\r\n  }\r\n\r\n  const brand_search_list = getBrand;\r\n\r\n  const getBrandSearch = (input, lists) => {\r\n    if (!input) {\r\n      return lists;\r\n    }\r\n\r\n    return lists.filter((val) =>\r\n      val.brand.toLowerCase()?.includes(input.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const searhbrandlist = getBrandSearch(brandInput, brand_search_list);\r\n\r\n  ////\r\n\r\n  function GetPriorityVal() {\r\n    let ser_priorities = document.querySelector(\"#priority\").value;\r\n\r\n    setPriorityInput(ser_priorities);\r\n  }\r\n\r\n  const priority_search_list = getPriorities;\r\n\r\n  const getPrioritySearch = (input, lists) => {\r\n    if (!input) {\r\n      return lists;\r\n    }\r\n\r\n    return lists.filter((val) =>\r\n      val.priority.toLowerCase()?.includes(input.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const searhprioritylist = getPrioritySearch(\r\n    priorityInput,\r\n    priority_search_list\r\n  );\r\n\r\n  ////\r\n  function GetStatusVal() {\r\n    let ser_status = document.querySelector(\"#status\").value;\r\n\r\n    setStatusInput(ser_status);\r\n  }\r\n\r\n  const status_search_list = getStatus;\r\n\r\n  const getStatusSearch = (input, lists) => {\r\n    if (!input) {\r\n      return lists;\r\n    }\r\n\r\n    return lists.filter((val) =>\r\n      val?.status.toLowerCase()?.includes(input.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const searhstatuslist = getStatusSearch(statusInput, status_search_list);\r\n\r\n  ////\r\n  function GetCountryVal() {\r\n    let ser_country = document.querySelector(\"#country\").value;\r\n\r\n    setCountryInput(ser_country);\r\n  }\r\n\r\n  const country_search_list = getCountry;\r\n\r\n  const getCountrySearch = (input, lists) => {\r\n    if (!input) {\r\n      return lists;\r\n    }\r\n\r\n    return lists.filter((val) =>\r\n      val.country.toLowerCase()?.includes(input.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const searhcountrylist = getCountrySearch(countryInput, country_search_list);\r\n\r\n  const removeElement = (array, n) => {\r\n    var index = array.indexOf(n);\r\n    if (index > -1) {\r\n      array.splice(index, 1);\r\n    }\r\n    return array;\r\n  };\r\n\r\n  const removeArrayElementFromArray = (array, arrTwo) => {\r\n    array &&\r\n      array.forEach((v) => {\r\n        if (arrTwo && arrTwo.includes(v)) {\r\n          removeElement(v);\r\n        }\r\n      });\r\n    return array;\r\n  };\r\n\r\n  const [updated, setUpdated] = useState(true);\r\n\r\n  const updateLocalVal = (panel, localData) => {\r\n    if (updated) {\r\n      setSelectedFilters(() => ({\r\n        brand: localData.brand.length > 0 ? localData.brand : [],\r\n        category: localData.category.length > 0 ? localData.category : [],\r\n        country: localData.country.length > 0 ? localData.country : [],\r\n        publisher: localData.publisher.length > 0 ? localData.publisher : [],\r\n        status:\r\n          localData.status && localData.status.length > 0\r\n            ? localData.status\r\n            : [],\r\n        channel: localData.channel.length > 0 ? localData.channel : [],\r\n        priority: localData.priority.length > 0 ? localData.priority : [],\r\n      }));\r\n\r\n      setUpdated(false);\r\n    }\r\n    if (!panel) {\r\n      setUpdated(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const localSelectedFilterValues = JSON.parse(\r\n      getLocalStorage(FILTER_CATEGORY_SELECTED_VALUE.SELECTED)\r\n    );\r\n    if (didMount.current && !_.isEmpty(localSelectedFilterValues)) {\r\n      updateLocalVal(panel, localSelectedFilterValues);\r\n    }\r\n  }, [panel]);\r\n\r\n  useEffect(() => {\r\n    const localSelectedFilterValues = JSON.parse(\r\n      getLocalStorage(FILTER_CATEGORY_SELECTED_VALUE.SELECTED)\r\n    );\r\n    if (!panel && didMount.current) {\r\n      let mergedBrand =\r\n        localSelectedFilterValues &&\r\n        localSelectedFilterValues.brand &&\r\n        localSelectedFilterValues.brand.length > 0\r\n          ? [...localSelectedFilterValues.brand, ...selectedFilters.brand]\r\n          : selectedFilters.brand && selectedFilters.brand.length > 0\r\n          ? [...selectedFilters.brand]\r\n          : [];\r\n      let meregeCategory =\r\n        localSelectedFilterValues &&\r\n        localSelectedFilterValues.category &&\r\n        localSelectedFilterValues.category.length > 0\r\n          ? [...localSelectedFilterValues.category, ...selectedFilters.category]\r\n          : selectedFilters.category && selectedFilters.category.length > 0\r\n          ? [...selectedFilters.category]\r\n          : [];\r\n      let meregeChannel =\r\n        localSelectedFilterValues &&\r\n        localSelectedFilterValues.channel &&\r\n        localSelectedFilterValues.channel.length > 0\r\n          ? [...localSelectedFilterValues.channel, ...selectedFilters.channel]\r\n          : selectedFilters.channel && selectedFilters.channel.length > 0\r\n          ? [...selectedFilters.channel]\r\n          : [];\r\n      let meregePriority =\r\n        localSelectedFilterValues &&\r\n        localSelectedFilterValues.priority &&\r\n        localSelectedFilterValues.priority.length > 0\r\n          ? [...localSelectedFilterValues.priority, ...selectedFilters.priority]\r\n          : selectedFilters.priority && selectedFilters.priority.length > 0\r\n          ? [...selectedFilters.priority]\r\n          : [];\r\n      let meregeCountry =\r\n        localSelectedFilterValues &&\r\n        localSelectedFilterValues.country &&\r\n        localSelectedFilterValues.country.length > 0\r\n          ? [...localSelectedFilterValues.country, ...selectedFilters.country]\r\n          : selectedFilters.country && selectedFilters.country.length > 0\r\n          ? [...selectedFilters.country]\r\n          : [];\r\n      let meregePublisher =\r\n        localSelectedFilterValues &&\r\n        localSelectedFilterValues.publisher &&\r\n        localSelectedFilterValues.publisher.length > 0\r\n          ? [\r\n              ...localSelectedFilterValues.publisher,\r\n              ...selectedFilters.publisher,\r\n            ]\r\n          : selectedFilters.publisher && selectedFilters.publisher.length > 0\r\n          ? [...selectedFilters.publisher]\r\n          : [];\r\n      let meregeStatus =\r\n        localSelectedFilterValues &&\r\n        localSelectedFilterValues.status &&\r\n        localSelectedFilterValues.status.length &&\r\n        localSelectedFilterValues.status.length > 0\r\n          ? [...localSelectedFilterValues.status, ...selectedFilters.status]\r\n          : selectedFilters.status &&\r\n            selectedFilters.status &&\r\n            selectedFilters.status.length > 0\r\n          ? [...selectedFilters.status]\r\n          : [];\r\n\r\n      const selectedArr = {\r\n        brand: removeArrayElementFromArray(\r\n          mergedBrand,\r\n          unSelectedFilters.brand\r\n        ),\r\n        category: removeArrayElementFromArray(\r\n          meregeCategory,\r\n          unSelectedFilters.category\r\n        ),\r\n        country: removeArrayElementFromArray(\r\n          meregeCountry,\r\n          unSelectedFilters.country\r\n        ),\r\n        publisher: removeArrayElementFromArray(\r\n          meregePublisher,\r\n          unSelectedFilters.publisher\r\n        ),\r\n        status: removeArrayElementFromArray(\r\n          meregeStatus,\r\n          unSelectedFilters.status\r\n        ),\r\n        channel: removeArrayElementFromArray(\r\n          meregeChannel,\r\n          unSelectedFilters.channel\r\n        ),\r\n        priority: removeArrayElementFromArray(\r\n          meregePriority,\r\n          unSelectedFilters.priority\r\n        ),\r\n      };\r\n\r\n      let hasChanged = false;\r\n      Object.keys(selectedFilters).map((v) => {\r\n        const locState =\r\n          localSelectedFilterValues &&\r\n          localSelectedFilterValues[v] &&\r\n          localSelectedFilterValues[v].length > 0 &&\r\n          localSelectedFilterValues[v].sort().join(\",\");\r\n        const currentState =\r\n          selectedFilters[v].length > 0 && selectedFilters[v].sort().join(\",\");\r\n        if (locState !== currentState) {\r\n          hasChanged = true;\r\n        }\r\n        return hasChanged;\r\n      });\r\n      if (hasChanged) {\r\n        const filteredBrand =\r\n          selectedFilters.brand &&\r\n          selectedFilters.brand.length > 0 &&\r\n          selectedFilters.brand.sort().join(\",\") !==\r\n            localSelectedFilterValues &&\r\n          localSelectedFilterValues.brand &&\r\n          localSelectedFilterValues.brand.length > 0 &&\r\n          localSelectedFilterValues.brand.sort().join(\",\");\r\n        const filtereCategory =\r\n          selectedFilters.category &&\r\n          selectedFilters.category.length > 0 &&\r\n          selectedFilters.category.sort().join(\",\") !==\r\n            localSelectedFilterValues &&\r\n          localSelectedFilterValues.category &&\r\n          localSelectedFilterValues.category.length > 0 &&\r\n          localSelectedFilterValues.category.sort().join(\",\");\r\n        const filteredCountry =\r\n          selectedFilters.country &&\r\n          selectedFilters.country.length > 0 &&\r\n          selectedFilters.country.sort().join(\",\") !==\r\n            localSelectedFilterValues &&\r\n          localSelectedFilterValues.country &&\r\n          localSelectedFilterValues.country.length > 0 &&\r\n          localSelectedFilterValues.country.sort().join(\",\");\r\n        const filteredPublisher =\r\n          selectedFilters.publisher &&\r\n          selectedFilters.publisher.length > 0 &&\r\n          selectedFilters.publisher.sort().join(\",\") !==\r\n            localSelectedFilterValues &&\r\n          localSelectedFilterValues.publisher &&\r\n          localSelectedFilterValues.publisher.length > 0 &&\r\n          localSelectedFilterValues.publisher.sort().join(\",\");\r\n        const filteredStatus =\r\n          selectedFilters.status &&\r\n          selectedFilters.status.length > 0 &&\r\n          selectedFilters.status.sort().join(\",\") !==\r\n            localSelectedFilterValues &&\r\n          localSelectedFilterValues.status &&\r\n          localSelectedFilterValues.status.length > 0 &&\r\n          localSelectedFilterValues.status.sort().join(\",\");\r\n        const filteredChannel =\r\n          selectedFilters.channel &&\r\n          selectedFilters.channel.length > 0 &&\r\n          selectedFilters.channel.sort().join(\",\") !==\r\n            localSelectedFilterValues &&\r\n          localSelectedFilterValues.channel &&\r\n          localSelectedFilterValues.channel.length > 0 &&\r\n          localSelectedFilterValues.channel.sort().join(\",\");\r\n        const filteredPriority =\r\n          selectedFilters.priority &&\r\n          selectedFilters.priority.length > 0 &&\r\n          selectedFilters.priority.sort().join(\",\") !==\r\n            localSelectedFilterValues &&\r\n          localSelectedFilterValues.priority &&\r\n          localSelectedFilterValues.priority.length > 0 &&\r\n          localSelectedFilterValues.priority.sort().join(\",\");\r\n        if (\r\n          filteredBrand &&\r\n          filtereCategory &&\r\n          filteredCountry &&\r\n          filteredPublisher &&\r\n          filteredStatus &&\r\n          filteredChannel &&\r\n          filteredPriority\r\n        ) {\r\n          setLocalStorage(\r\n            FILTER_CATEGORY_SELECTED_VALUE.SELECTED,\r\n            JSON.stringify(selectedArr)\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }, [startDate, panel]);\r\n\r\n  useEffect(() => {\r\n    if (!didMount.current) {\r\n      didMount.current = true;\r\n      dispatch({\r\n        type: SET_GLOBAL_REFRESH_RENDERING,\r\n        setGlobalRefreshRendering: false,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const unSelectAll = (e, filterName) => {\r\n    e.preventDefault();\r\n\r\n    if (filterName === \"channel\" && selectedFilters?.channel?.length != 0) {\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        channel: [],\r\n      }));\r\n    }\r\n    if (filterName === \"channel\" && selectedFilters?.channel?.length == 0) {\r\n      let tempSelected = [];\r\n      searchannelList.forEach((item) => tempSelected.push(item.channel_name));\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        channel: tempSelected,\r\n      }));\r\n    }\r\n    if (filterName === \"category\" && selectedFilters?.category?.length != 0) {\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        category: [],\r\n      }));\r\n    }\r\n    if (filterName === \"category\" && selectedFilters?.category?.length == 0) {\r\n      let tempcatSelected = [];\r\n      searhcategorylist.forEach((item) => tempcatSelected.push(item.category));\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        category: tempcatSelected,\r\n      }));\r\n    }\r\n    if (filterName === \"publisher\" && selectedFilters?.publisher?.length != 0) {\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        publisher: [],\r\n      }));\r\n    }\r\n    if (filterName === \"publisher\" && selectedFilters?.publisher?.length == 0) {\r\n      const temppublisherSelected = [];\r\n      searhpublisherlist.forEach((item) =>\r\n        temppublisherSelected.push(item.publisher)\r\n      );\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        publisher: temppublisherSelected,\r\n      }));\r\n    }\r\n    if (filterName === \"country\" && selectedFilters?.country?.length != 0) {\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        country: [],\r\n      }));\r\n    }\r\n    if (filterName === \"country\" && selectedFilters?.country?.length == 0) {\r\n      const tempcountrySelected = [];\r\n      searhcountrylist.forEach((item) =>\r\n        tempcountrySelected.push(item.country)\r\n      );\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        country: tempcountrySelected,\r\n      }));\r\n    }\r\n    if (filterName === \"brand\" && selectedFilters?.brand?.length != 0) {\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        brand: [],\r\n      }));\r\n    }\r\n    if (filterName === \"brand\" && selectedFilters?.brand?.length == 0) {\r\n      const tempbrandSelected = [];\r\n      searhbrandlist.forEach((item) => tempbrandSelected.push(item.brand));\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        brand: tempbrandSelected,\r\n      }));\r\n    }\r\n    if (filterName === \"priority\" && selectedFilters?.priority?.length != 0) {\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        priority: [],\r\n      }));\r\n    }\r\n    if (filterName === \"priority\" && selectedFilters?.priority?.length == 0) {\r\n      const tempprioritySelected = [];\r\n      searhprioritylist.forEach((item) =>\r\n        tempprioritySelected.push(item.priority)\r\n      );\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        priority: tempprioritySelected,\r\n      }));\r\n    }\r\n    if (filterName === \"status\" && selectedFilters?.status?.length != 0) {\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        status: [],\r\n      }));\r\n    }\r\n    if (filterName === \"status\" && selectedFilters?.status?.length == 0) {\r\n      const tempstatusSelected = [];\r\n      searhstatuslist.forEach((item) =>\r\n        tempstatusSelected.push(item.status)\r\n      );\r\n      setSelectedFilters((values) => ({\r\n        ...values,\r\n        status: tempstatusSelected,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const expandValue = () => {\r\n    setFlag(!flag);\r\n  };\r\n  const handleCheckbox = (event) => {\r\n    const { name, checked, value } = event.target;\r\n    if (checked) {\r\n      if (name == \"channel\" && checked) {\r\n        setSelectedFilters((values) => ({\r\n          ...values,\r\n          channel:\r\n            values.channel &&\r\n            values.channel.length > 0 &&\r\n            !values?.channel?.includes(value)\r\n              ? [...values.channel, value]\r\n              : [value],\r\n        }));\r\n        setUnSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          channel:\r\n            prevState.channel &&\r\n            unSelectedFilters.channel.length > 0 &&\r\n            prevState.channel.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n      }\r\n      if (name == \"category\" && checked) {\r\n        setCategoryCounter(category_counter + 1);\r\n        setSelectedFilters((values) => ({\r\n          ...values,\r\n          category:\r\n            values.category &&\r\n            values.category.length > 0 &&\r\n            !values?.category?.includes(value)\r\n              ? [...values.category, value]\r\n              : [value],\r\n        }));\r\n        setUnSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          category:\r\n            prevState.category &&\r\n            unSelectedFilters.category.length > 0 &&\r\n            prevState.category.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n      }\r\n      if (name == \"publisher\" && checked) {\r\n        setPublishersCounter(publishers_counter + 1);\r\n        setSelectedFilters((values) => ({\r\n          ...values,\r\n          publisher:\r\n            values.publisher &&\r\n            values.publisher.length > 0 &&\r\n            !values?.publisher?.includes(value)\r\n              ? [...values.publisher, value]\r\n              : [value],\r\n        }));\r\n        setUnSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          publisher:\r\n            prevState.publisher &&\r\n            unSelectedFilters.publisher.length > 0 &&\r\n            prevState.publisher.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n      }\r\n      if (name == \"country\" && checked) {\r\n        setCountryCounter(country_counter + 1);\r\n        setSelectedFilters((values) => ({\r\n          ...values,\r\n          country:\r\n            values.country &&\r\n            values.country.length > 0 &&\r\n            !values?.country?.includes(value)\r\n              ? [...values.country, value]\r\n              : [value],\r\n        }));\r\n        setUnSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          country:\r\n            prevState.country &&\r\n            unSelectedFilters.country.length > 0 &&\r\n            prevState.country.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n      }\r\n      if (name == \"brand\" && checked) {\r\n        setBrandsCounter(brands_counter + 1);\r\n        setSelectedFilters((values) => ({\r\n          ...values,\r\n          brand:\r\n            values.brand &&\r\n            values.brand.length > 0 &&\r\n            !values?.brand?.includes(value)\r\n              ? [...values.brand, value]\r\n              : [value],\r\n        }));\r\n        setUnSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          brand:\r\n            prevState.brand &&\r\n            unSelectedFilters.brand.length > 0 &&\r\n            prevState.brand.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n      }\r\n      if (name == \"priority\" && checked) {\r\n        setPriorityCounter(priority_counter + 1);\r\n        setSelectedFilters((values) => ({\r\n          ...values,\r\n          priority:\r\n            values.priority &&\r\n            values.priority.length > 0 &&\r\n            !values?.priority?.includes(value)\r\n              ? [...values.priority, value]\r\n              : [value],\r\n        }));\r\n        setUnSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          priority:\r\n            prevState.priority &&\r\n            unSelectedFilters.priority.length > 0 &&\r\n            prevState.priority.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n      }\r\n      if (name == \"status\" && checked) {\r\n        setSelectedFilters((values) => ({\r\n          ...values,\r\n          status:\r\n            values.status &&\r\n            values.status.length > 0 &&\r\n            !values?.status?.includes(value)\r\n              ? [...values.status, value]\r\n              : [value],\r\n        }));\r\n        setUnSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          status:\r\n            prevState.status &&\r\n            unSelectedFilters.status.length > 0 &&\r\n            prevState.status.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n      }\r\n    } else {\r\n      if (\r\n        name == \"channel\" &&\r\n        selectedFilters &&\r\n        selectedFilters.channel.length > 0 &&\r\n        selectedFilters.channel.includes(value)\r\n      ) {\r\n        setSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          channel:\r\n            prevState.channel &&\r\n            selectedFilters.channel.length > 0 &&\r\n            prevState.channel.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n        setUnSelectedFilters((values) => ({\r\n          ...values,\r\n          channel:\r\n            values.channel &&\r\n            values.channel.length > 0 &&\r\n            !values?.channel?.includes(value)\r\n              ? [...values.channel, value]\r\n              : [value],\r\n        }));\r\n      }\r\n      if (\r\n        name == \"category\" &&\r\n        selectedFilters &&\r\n        selectedFilters.category.length > 0 &&\r\n        selectedFilters.category.includes(value)\r\n      ) {\r\n        setSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          category:\r\n            prevState.category &&\r\n            selectedFilters.category.length > 0 &&\r\n            prevState.category.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n        setUnSelectedFilters((values) => ({\r\n          ...values,\r\n          category:\r\n            values.category &&\r\n            values.category.length > 0 &&\r\n            !values?.category?.includes(value)\r\n              ? [...values.category, value]\r\n              : [value],\r\n        }));\r\n      }\r\n      if (\r\n        name == \"publisher\" &&\r\n        selectedFilters &&\r\n        selectedFilters.publisher.length > 0 &&\r\n        selectedFilters.publisher.includes(value)\r\n      ) {\r\n        setSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          publisher:\r\n            prevState.publisher &&\r\n            selectedFilters.publisher.length > 0 &&\r\n            prevState.publisher.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n        setUnSelectedFilters((values) => ({\r\n          ...values,\r\n          publisher:\r\n            values.publisher &&\r\n            values.publisher.length > 0 &&\r\n            !values?.publisher?.includes(value)\r\n              ? [...values.publisher, value]\r\n              : [value],\r\n        }));\r\n      }\r\n      if (\r\n        name == \"brand\" &&\r\n        selectedFilters &&\r\n        selectedFilters.brand.length > 0 &&\r\n        selectedFilters.brand.includes(value)\r\n      ) {\r\n        setSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          brand:\r\n            prevState.brand &&\r\n            selectedFilters.brand.length > 0 &&\r\n            prevState.brand.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n        setUnSelectedFilters((values) => ({\r\n          ...values,\r\n          brand:\r\n            values.brand &&\r\n            values.brand.length > 0 &&\r\n            !values?.brand?.includes(value)\r\n              ? [...values.brand, value]\r\n              : [value],\r\n        }));\r\n      }\r\n      if (\r\n        name == \"country\" &&\r\n        selectedFilters &&\r\n        selectedFilters.country.length > 0 &&\r\n        selectedFilters.country.includes(value)\r\n      ) {\r\n        setSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          country:\r\n            prevState.country &&\r\n            selectedFilters.country.length > 0 &&\r\n            prevState.country.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n        setUnSelectedFilters((values) => ({\r\n          ...values,\r\n          country:\r\n            values.country &&\r\n            values.country.length > 0 &&\r\n            !values?.country?.includes(value)\r\n              ? [...values.country, value]\r\n              : [value],\r\n        }));\r\n      }\r\n      if (\r\n        name == \"priority\" &&\r\n        selectedFilters &&\r\n        selectedFilters.priority.length > 0 &&\r\n        selectedFilters.priority.includes(value)\r\n      ) {\r\n        setSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          priority:\r\n            prevState.priority &&\r\n            selectedFilters.priority.length > 0 &&\r\n            prevState.priority.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n        setUnSelectedFilters((values) => ({\r\n          ...values,\r\n          priority:\r\n            values.priority &&\r\n            values.priority.length > 0 &&\r\n            !values?.priority?.includes(value)\r\n              ? [...values.priority, value]\r\n              : [value],\r\n        }));\r\n      }\r\n      if (\r\n        name == \"status\" &&\r\n        selectedFilters &&\r\n        selectedFilters.status.length > 0 &&\r\n        selectedFilters.status.includes(value)\r\n      ) {\r\n        setSelectedFilters((prevState) => ({\r\n          ...prevState,\r\n          status:\r\n            prevState.status &&\r\n            selectedFilters.status.length > 0 &&\r\n            prevState.status.filter((x) => (x !== value ? x : null)),\r\n        }));\r\n        setUnSelectedFilters((values) => ({\r\n          ...values,\r\n          status:\r\n            values.status &&\r\n            values.status.length > 0 &&\r\n            !values?.status?.includes(value)\r\n              ? [...values.status, value]\r\n              : [value],\r\n        }));\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Drawer anchor={\"right\"} open={panel} onClose={toggleDrawer}>\r\n        <div style={{ width: \"300px\" }}>\r\n          <div>\r\n            <Formik initialValues={{ dashboarddata }}>\r\n              <Form>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                  <label>Select Date</label>\r\n                  <DatePicker\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    selected={startDate}\r\n                    onChange={(date) => hadleDateChange(date)}\r\n                    selectsStart\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                  />\r\n                  <DatePicker\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    selected={endDate}\r\n                    onChange={(date) => setEndDate(date)}\r\n                    selectsEnd\r\n                    startDate={startDate}\r\n                    endDate={endDate}\r\n                    minDate={startDate}\r\n                  />\r\n                </Col>\r\n                <div className={classes.root}>\r\n                  {filter_list && filter_list.includes(\"channel\") ? (\r\n                    <ExpansionPanel expanded={flag}>\r\n                      <ExpansionPanelSummary\r\n                        expandIcon={\r\n                          <ExpandMoreIcon onClick={(e) => expandValue(e)} />\r\n                        }\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"panel1c-header\"\r\n                        disabled={!filter_list.includes(\"channel\")}\r\n                      >\r\n                        <div className=\"d-flex\">\r\n                          <div className=\"svg g\">\r\n                            <SVG\r\n                              src={toAbsoluteUrl(\r\n                                \"/media/svg/icons/General/Check.svg\"\r\n                              )}\r\n                              onClick={(e) => unSelectAll(e, \"channel\")}\r\n                            ></SVG>\r\n                          </div>\r\n                          <Typography className=\"d-flex mt-2\" variant=\"h6\">\r\n                            {/* <h6> Channels </h6> */}\r\n                            Channels\r\n                          </Typography>\r\n                          <Typography\r\n                            className=\"d-flex mt-2 ml-16\"\r\n                            variant=\"h6\"\r\n                          >\r\n                            {\" \"}\r\n                            {`${\r\n                              selectedFilters?.channel &&\r\n                              selectedFilters?.channel &&\r\n                              selectedFilters?.channel?.length > 0\r\n                                ? selectedFilters?.channel?.length\r\n                                : \"0\"\r\n                            } Selected`}{\" \"}\r\n                          </Typography>\r\n                        </div>\r\n                      </ExpansionPanelSummary>\r\n                      <Divider />\r\n                      <ExpansionPanelActions>\r\n                        <div className=\"row\">\r\n                          <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                              placeholder=\"Search\"\r\n                              aria-label=\"Search\"\r\n                              aria-describedby=\"basic-addon2\"\r\n                              id=\"channel\"\r\n                              onBlur={Getchannelval}\r\n                            />\r\n                            <InputGroup.Append>\r\n                              <InputGroup.Text id=\"basic-addon2\">\r\n                                <span\r\n                                  onClick={Getchannelval}\r\n                                  // type=\"submit\"\r\n                                >\r\n                                  Search\r\n                                </span>\r\n                              </InputGroup.Text>\r\n                            </InputGroup.Append>\r\n                          </InputGroup>\r\n                        </div>\r\n                      </ExpansionPanelActions>\r\n\r\n                      <ExpansionPanelDetails className={classes.details}>\r\n                        <Form.Group\r\n                          controlId=\"formBasicChecbox\"\r\n                          className=\"checkbox-inner mb-0\"\r\n                        >\r\n                          {searchannelList.map((item) => (\r\n                            <Checkbox\r\n                              children={item.channel_name}\r\n                              onChange={(e) => handleCheckbox(e)}\r\n                              name=\"channel\"\r\n                              value={item.channel_name}\r\n                              checked={\r\n                                (selectedFilters.channel &&\r\n                                  selectedFilters.channel.length > 0 &&\r\n                                  selectedFilters.channel.includes(\r\n                                    item.channel_name\r\n                                  )) ||\r\n                                false\r\n                              }\r\n                            />\r\n                          ))}\r\n                        </Form.Group>\r\n                      </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {filter_list && filter_list.includes(\"category\") ? (\r\n                    <ExpansionPanel expanded={categoryExpand}>\r\n                      <ExpansionPanelSummary\r\n                        expandIcon={\r\n                          <ExpandMoreIcon\r\n                            onClick={(e) => setCategoryExpand(!categoryExpand)}\r\n                          />\r\n                          // <ExpandMoreIcon onClick={(e) => expandValue(e)} />\r\n                        }\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"panel1c-header\"\r\n                        disabled={!filter_list.includes(\"category\")}\r\n                      >\r\n                        <div className=\"d-flex\">\r\n                          <div className=\"svg g\">\r\n                            <SVG\r\n                              src={toAbsoluteUrl(\r\n                                \"/media/svg/icons/General/Check.svg\"\r\n                              )}\r\n                              onClick={(e) => unSelectAll(e, \"category\")}\r\n                            ></SVG>\r\n                          </div>\r\n                          <Typography className=\"d-flex mt-2\" variant=\"h6\">\r\n                            Categories\r\n                          </Typography>\r\n                          <Typography\r\n                            className=\"d-flex mt-2 ml-12\"\r\n                            variant=\"h6\"\r\n                          >\r\n                            {\" \"}\r\n                            {`${\r\n                              selectedFilters?.category &&\r\n                              selectedFilters?.category &&\r\n                              selectedFilters?.category?.length > 0\r\n                                ? selectedFilters?.category?.length\r\n                                : \"0\"\r\n                            } Selected`}{\" \"}\r\n                          </Typography>\r\n                        </div>\r\n                      </ExpansionPanelSummary>\r\n                      <Divider />\r\n                      <ExpansionPanelActions>\r\n                        <div className=\"row\">\r\n                          <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                              placeholder=\"Search\"\r\n                              aria-label=\"Search\"\r\n                              aria-describedby=\"basic-addon2\"\r\n                              id=\"category\"\r\n                              onBlur={GetCatergoryVal}\r\n                            />\r\n                            <InputGroup.Append>\r\n                              <InputGroup.Text id=\"basic-addon2\">\r\n                                <span onClick={GetCatergoryVal}>Search</span>\r\n                              </InputGroup.Text>\r\n                            </InputGroup.Append>\r\n                          </InputGroup>\r\n                        </div>\r\n                      </ExpansionPanelActions>\r\n                      <ExpansionPanelDetails className={classes.details}>\r\n                        <Form.Group\r\n                          controlId=\"formBasicChecbox\"\r\n                          className=\"checkbox-inner mb-0\"\r\n                        >\r\n                          {searhcategorylist.map((item) => (\r\n                            <Checkbox\r\n                              children={item.category}\r\n                              // onChange={handleCheckbox}\r\n                              onChange={(e) => handleCheckbox(e)}\r\n                              name=\"category\"\r\n                              value={item.category}\r\n                              checked={\r\n                                selectedFilters.category &&\r\n                                selectedFilters.category.length > 0 &&\r\n                                selectedFilters.category.includes(item.category)\r\n                              }\r\n                            ></Checkbox>\r\n                          ))}\r\n                        </Form.Group>\r\n                      </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {filter_list && filter_list.includes(\"publisher\") ? (\r\n                    <ExpansionPanel expanded={publisherExpand}>\r\n                      <ExpansionPanelSummary\r\n                        expandIcon={\r\n                          <ExpandMoreIcon\r\n                            onClick={(e) =>\r\n                              setPublisherExpand(!publisherExpand)\r\n                            }\r\n                          />\r\n                        }\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"panel1c-header\"\r\n                        disabled={!filter_list.includes(\"publisher\")}\r\n                      >\r\n                        <div className=\"d-flex\">\r\n                          <div className=\"svg g\">\r\n                            <SVG\r\n                              src={toAbsoluteUrl(\r\n                                \"/media/svg/icons/General/Check.svg\"\r\n                              )}\r\n                              onClick={(e) => unSelectAll(e, \"publisher\")}\r\n                            ></SVG>\r\n                          </div>\r\n                          <Typography className=\"d-flex mt-2\" variant=\"h6\">\r\n                            Publisher\r\n                          </Typography>\r\n                          <Typography\r\n                            className=\"d-flex mt-2 ml-12\"\r\n                            variant=\"h6\"\r\n                          >\r\n                            {\" \"}\r\n                            {`${\r\n                              selectedFilters?.publisher &&\r\n                              selectedFilters?.publisher &&\r\n                              selectedFilters?.publisher?.length > 0\r\n                                ? selectedFilters?.publisher?.length\r\n                                : \"0\"\r\n                            } Selected`}{\" \"}\r\n                          </Typography>\r\n                        </div>\r\n                      </ExpansionPanelSummary>\r\n                      <Divider />\r\n                      <ExpansionPanelActions>\r\n                        <div className=\"row\">\r\n                          <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                              placeholder=\"Search\"\r\n                              aria-label=\"Search\"\r\n                              aria-describedby=\"basic-addon2\"\r\n                              id=\"publisher\"\r\n                              onBlur={GetPublisherVal}\r\n                            />\r\n                            <InputGroup.Append>\r\n                              <InputGroup.Text id=\"basic-addon2\">\r\n                                <span onClick={GetPublisherVal}>Search</span>\r\n                              </InputGroup.Text>\r\n                            </InputGroup.Append>\r\n                          </InputGroup>\r\n                        </div>\r\n                      </ExpansionPanelActions>\r\n                      <ExpansionPanelDetails className={classes.details}>\r\n                        <Form.Group\r\n                          controlId=\"formBasicChecbox\"\r\n                          className=\"checkbox-inner mb-0\"\r\n                        >\r\n                          {searhpublisherlist.map((item) => (\r\n                            <Checkbox\r\n                              children={item.publisher}\r\n                              // onChange={handleCheckbox}\r\n                              onChange={(e) => handleCheckbox(e)}\r\n                              name=\"publisher\"\r\n                              value={item.publisher}\r\n                              checked={\r\n                                selectedFilters.publisher &&\r\n                                selectedFilters.publisher.length > 0 &&\r\n                                selectedFilters.publisher.includes(\r\n                                  item.publisher\r\n                                )\r\n                              }\r\n                            ></Checkbox>\r\n                          ))}\r\n                        </Form.Group>\r\n                      </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {filter_list && filter_list.includes(\"country\") ? (\r\n                    <ExpansionPanel expanded={countryExpand}>\r\n                      <ExpansionPanelSummary\r\n                        expandIcon={\r\n                          <ExpandMoreIcon\r\n                            onClick={(e) => setCountryExpand(!countryExpand)}\r\n                          />\r\n                        }\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"panel1c-header\"\r\n                        disabled={!filter_list.includes(\"country\")}\r\n                      >\r\n                        <div className=\"d-flex\">\r\n                          <div className=\"svg g\">\r\n                            <SVG\r\n                              src={toAbsoluteUrl(\r\n                                \"/media/svg/icons/General/Check.svg\"\r\n                              )}\r\n                              onClick={(e) => unSelectAll(e, \"country\")}\r\n                            ></SVG>\r\n                          </div>\r\n                          <Typography className=\"d-flex mt-2\" variant=\"h6\">\r\n                            Countries\r\n                          </Typography>\r\n                          <Typography\r\n                            className=\"d-flex mt-2 ml-12\"\r\n                            variant=\"h6\"\r\n                          >\r\n                            {\" \"}\r\n                            {`${\r\n                              selectedFilters?.country &&\r\n                              selectedFilters?.country &&\r\n                              selectedFilters?.country?.length > 0\r\n                                ? selectedFilters?.country?.length\r\n                                : \"0\"\r\n                            } Selected`}{\" \"}\r\n                          </Typography>\r\n                        </div>\r\n                      </ExpansionPanelSummary>\r\n                      <Divider />\r\n                      <ExpansionPanelActions>\r\n                        <div className=\"row\">\r\n                          <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                              placeholder=\"Search\"\r\n                              aria-label=\"Search\"\r\n                              aria-describedby=\"basic-addon2\"\r\n                              id=\"country\"\r\n                              onBlur={GetCountryVal}\r\n                            />\r\n                            <InputGroup.Append>\r\n                              <InputGroup.Text id=\"basic-addon2\">\r\n                                <span onClick={GetCountryVal}>Search</span>\r\n                              </InputGroup.Text>\r\n                            </InputGroup.Append>\r\n                          </InputGroup>\r\n                        </div>\r\n                      </ExpansionPanelActions>\r\n                      <ExpansionPanelDetails className={classes.details}>\r\n                        <Form.Group\r\n                          controlId=\"formBasicChecbox\"\r\n                          className=\"checkbox-inner mb-0\"\r\n                        >\r\n                          {searhcountrylist.map((item) => (\r\n                            <Checkbox\r\n                              children={item.country}\r\n                              // onChange={handleCheckbox}\r\n                              onChange={(e) => handleCheckbox(e)}\r\n                              name=\"country\"\r\n                              value={item.country}\r\n                              checked={\r\n                                selectedFilters.country &&\r\n                                selectedFilters.country.length > 0 &&\r\n                                selectedFilters.country.includes(item.country)\r\n                              }\r\n                            ></Checkbox>\r\n                          ))}\r\n                        </Form.Group>\r\n                      </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {filter_list && filter_list.includes(\"brand\") ? (\r\n                    <ExpansionPanel expanded={brandExpand}>\r\n                      <ExpansionPanelSummary\r\n                        expandIcon={\r\n                          <ExpandMoreIcon\r\n                            onClick={(e) => setBrandExpand(!brandExpand)}\r\n                          />\r\n                        }\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"panel1c-header\"\r\n                        disabled={!filter_list.includes(\"brand\")}\r\n                      >\r\n                        <div className=\"d-flex\">\r\n                          <div className=\"svg g\">\r\n                            <SVG\r\n                              src={toAbsoluteUrl(\r\n                                \"/media/svg/icons/General/Check.svg\"\r\n                              )}\r\n                              onClick={(e) => unSelectAll(e, \"brand\")}\r\n                            ></SVG>\r\n                          </div>\r\n                          <Typography className=\"d-flex mt-2\" variant=\"h6\">\r\n                            Brands\r\n                          </Typography>\r\n                          <Typography\r\n                            className=\"d-flex mt-2 ml-12\"\r\n                            variant=\"h6\"\r\n                          >\r\n                            {\" \"}\r\n                            {`${\r\n                              selectedFilters?.brand &&\r\n                              selectedFilters?.brand &&\r\n                              selectedFilters?.brand?.length > 0\r\n                                ? selectedFilters?.brand?.length\r\n                                : \"0\"\r\n                            } Selected`}{\" \"}\r\n                          </Typography>\r\n                        </div>\r\n                      </ExpansionPanelSummary>\r\n                      <Divider />\r\n                      <ExpansionPanelActions>\r\n                        <div className=\"row\">\r\n                          <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                              placeholder=\"Search\"\r\n                              aria-label=\"Search\"\r\n                              aria-describedby=\"basic-addon2\"\r\n                              id=\"brand\"\r\n                              onBlur={GetBrandVal}\r\n                            />\r\n                            <InputGroup.Append>\r\n                              <InputGroup.Text id=\"basic-addon2\">\r\n                                <span onClick={GetBrandVal}>Search</span>\r\n                              </InputGroup.Text>\r\n                            </InputGroup.Append>\r\n                          </InputGroup>\r\n                        </div>\r\n                      </ExpansionPanelActions>\r\n                      <ExpansionPanelDetails className={classes.details}>\r\n                        <Form.Group\r\n                          controlId=\"formBasicChecbox\"\r\n                          className=\"checkbox-inner mb-0\"\r\n                        >\r\n                          {searhbrandlist.map((item) => (\r\n                            <Checkbox\r\n                              children={item.brand}\r\n                              // onChange={handleCheckbox}\r\n                              onChange={(e) => handleCheckbox(e)}\r\n                              name=\"brand\"\r\n                              value={item.brand}\r\n                              checked={\r\n                                selectedFilters.brand &&\r\n                                selectedFilters.brand.length > 0 &&\r\n                                selectedFilters.brand.includes(item.brand)\r\n                              }\r\n                            ></Checkbox>\r\n                          ))}\r\n                        </Form.Group>\r\n                      </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {filter_list && filter_list.includes(\"priority\") ? (\r\n                    <ExpansionPanel expanded={priorityExpand}>\r\n                      <ExpansionPanelSummary\r\n                        expandIcon={\r\n                          <ExpandMoreIcon\r\n                            onClick={(e) => setPriorityExpand(!priorityExpand)}\r\n                          />\r\n                        }\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"panel1c-header\"\r\n                        disabled={!filter_list.includes(\"priority\")}\r\n                      >\r\n                        <div className=\"d-flex\">\r\n                          <div className=\"svg g\">\r\n                            <SVG\r\n                              src={toAbsoluteUrl(\r\n                                \"/media/svg/icons/General/Check.svg\"\r\n                              )}\r\n                              onClick={(e) => unSelectAll(e, \"priority\")}\r\n                            ></SVG>\r\n                          </div>\r\n                          <Typography className=\"d-flex mt-2\" variant=\"h6\">\r\n                            Priorities\r\n                          </Typography>\r\n                          <Typography\r\n                            className=\"d-flex mt-2 ml-12\"\r\n                            variant=\"h6\"\r\n                          >\r\n                            {\" \"}\r\n                            {`${\r\n                              selectedFilters?.priority &&\r\n                              selectedFilters?.priority &&\r\n                              selectedFilters?.priority?.length > 0\r\n                                ? selectedFilters?.priority?.length\r\n                                : \"0\"\r\n                            }Selected`}{\" \"}\r\n                          </Typography>\r\n                        </div>\r\n                      </ExpansionPanelSummary>\r\n                      <Divider />\r\n                      <ExpansionPanelActions>\r\n                        <div className=\"row\">\r\n                          <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                              placeholder=\"Search\"\r\n                              aria-label=\"Search\"\r\n                              aria-describedby=\"basic-addon2\"\r\n                              id=\"priority\"\r\n                              onBlur={GetPriorityVal}\r\n                            />\r\n                            <InputGroup.Append>\r\n                              <InputGroup.Text id=\"basic-addon2\">\r\n                                <span onClick={GetPriorityVal}>Search</span>\r\n                              </InputGroup.Text>\r\n                            </InputGroup.Append>\r\n                          </InputGroup>\r\n                        </div>\r\n                      </ExpansionPanelActions>\r\n                      <ExpansionPanelDetails className={classes.details}>\r\n                        <Form.Group\r\n                          controlId=\"formBasicChecbox\"\r\n                          className=\"checkbox-inner mb-0\"\r\n                        >\r\n                          {searhprioritylist.map((item) => (\r\n                            <Checkbox\r\n                              children={item.priority}\r\n                              // onChange={handleCheckbox}\r\n                              onChange={(e) => handleCheckbox(e)}\r\n                              name=\"priority\"\r\n                              value={item.priority}\r\n                              checked={\r\n                                selectedFilters.priority &&\r\n                                selectedFilters.priority.length > 0 &&\r\n                                selectedFilters.priority.includes(item.priority)\r\n                              }\r\n                            ></Checkbox>\r\n                          ))}\r\n                        </Form.Group>\r\n                      </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  {filter_list && filter_list.includes(\"status\") ? (\r\n                    <ExpansionPanel expanded={statusExpand}>\r\n                      <ExpansionPanelSummary\r\n                        expandIcon={\r\n                          <ExpandMoreIcon\r\n                            onClick={(e) => setStatusExpand(!statusExpand)}\r\n                          />\r\n                        }\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"panel1c-header\"\r\n                        disabled={!filter_list.includes(\"status\")}\r\n                      >\r\n                        <div className=\"d-flex\">\r\n                          <div className=\"svg g\">\r\n                            <SVG\r\n                              src={toAbsoluteUrl(\r\n                                \"/media/svg/icons/General/Check.svg\"\r\n                              )}\r\n                              onClick={(e) => unSelectAll(e, \"status\")}\r\n                            ></SVG>\r\n                          </div>\r\n                          <Typography className=\"d-flex mt-2\" variant=\"h6\">\r\n                            Status\r\n                          </Typography>\r\n                          <Typography\r\n                            className=\"d-flex mt-2 ml-12\"\r\n                            variant=\"h6\"\r\n                          >\r\n                            {\" \"}\r\n                            {`${\r\n                              selectedFilters?.status &&\r\n                              selectedFilters?.status &&\r\n                              selectedFilters?.status?.length > 0\r\n                                ? selectedFilters?.status?.length\r\n                                : \"0\"\r\n                            }Selected`}{\" \"}\r\n                          </Typography>\r\n                        </div>\r\n                      </ExpansionPanelSummary>\r\n                      <Divider />\r\n                      <ExpansionPanelActions>\r\n                        <div className=\"row\">\r\n                          <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                              placeholder=\"Search\"\r\n                              aria-label=\"Search\"\r\n                              aria-describedby=\"basic-addon2\"\r\n                              id=\"status\"\r\n                              onBlur={GetStatusVal}\r\n                            />\r\n                            <InputGroup.Append>\r\n                              <InputGroup.Text id=\"basic-addon2\">\r\n                                <span onClick={GetStatusVal}>Search</span>\r\n                              </InputGroup.Text>\r\n                            </InputGroup.Append>\r\n                          </InputGroup>\r\n                        </div>\r\n                      </ExpansionPanelActions>\r\n                      <ExpansionPanelDetails className={classes.details}>\r\n                        <Form.Group\r\n                          controlId=\"formBasicChecbox\"\r\n                          className=\"checkbox-inner mb-0\"\r\n                        >\r\n                          {searhstatuslist.map((item) => (\r\n                            <Checkbox\r\n                              children={item.status}\r\n                              // onChange={handleCheckbox}\r\n                              onChange={(e) => handleCheckbox(e)}\r\n                              name=\"status\"\r\n                              value={item.status}\r\n                              checked={\r\n                                selectedFilters.status &&\r\n                                selectedFilters.status.length > 0 &&\r\n                                selectedFilters.status.includes(\r\n                                  item.status\r\n                                )\r\n                              }\r\n                            ></Checkbox>\r\n                          ))}\r\n                        </Form.Group>\r\n                      </ExpansionPanelDetails>\r\n                    </ExpansionPanel>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    className=\"w-100\"\r\n                    onClick={(e) => {\r\n                      handleSubmit(e);\r\n                    }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Col>\r\n              </Form>\r\n            </Formik>\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    dispatch,\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { common, dashboard } = state;\r\n  return {\r\n    setSideDrawer:\r\n      dashboard && dashboard.setSideDrawer ? dashboard.setSideDrawer : false,\r\n    hasPackageChanged:\r\n      dashboard && dashboard.setSideDrawer ? dashboard.setSideDrawer : false,\r\n    setFilterApiCall:\r\n      dashboard && dashboard.setFilterApiCall\r\n        ? dashboard.setFilterApiCall\r\n        : false,\r\n    brand_list: common && common.brand_list ? common.brand_list : [],\r\n    category_list: common && common.category_list ? common.category_list : [],\r\n    channel_list: common && common.channel_list ? common.channel_list : [],\r\n    priority_list: common && common.priority_list ? common.priority_list : [],\r\n    publisher_list:\r\n      common && common.publisher_list ? common.publisher_list : [],\r\n    status_list: common && common.status_list ? common.status_list : [],\r\n    country_name: common && common.country_name ? common.country_name : [],\r\n    filter_list: common && common.filter_list ? common.filter_list : [],\r\n    setGlobalRefreshRendering:\r\n      common && common.setGlobalRefreshRendering\r\n        ? common.setGlobalRefreshRendering\r\n        : true,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterDrawer);\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-sequences */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { ProgressBar, Spinner, Row, Col, Button } from \"react-bootstrap\";\r\nimport FilterDrawer from \"../shared-componets/filterdrawer\";\r\nimport {\r\n  FetchTotalIncidents,\r\n  FetchIncidentVolumes,\r\n  FetchActivecasesbychannel,\r\n  FetchSubchannel,\r\n  FetchToptenLocation,\r\n  FetchCategorlevelcount,\r\n  FetchPublisherlevelcount,\r\n} from \"../../../../redux/actions/DashboardActions\";\r\nimport { FetchReport } from \"../../../../redux/actions/ReportActions\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  getLocalStorage\r\n} from \"../../../utils/helpers\"\r\nimport { FILTER_CATEGORY_SELECTED_VALUE } from \"../../../utils/const\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport moment from \"moment\";\r\nconst Dashboard = () => {\r\n  const [channels, setChannels] = useState(\"all\");\r\n  const [categories, setCategories] = useState(\"all\");\r\n  const [publishers, setPublishers] = useState(\"all\");\r\n  const [countries, setCountries] = useState(\"all\");\r\n  const [brands, setBrands] = useState(\"all\");\r\n  const [priorities, setPriorities] = useState(\"all\");\r\n  const [status, setStatus] = useState(\"all\");\r\n\r\n  const [panel, setPanel] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const [dashboarddata, setDashboarddata] = useState();\r\n  const toggleDrawer = (e) => {\r\n    setPanel(true);\r\n  };\r\n  const package_name = localStorage.getItem(\"dpackage\");\r\n  const handleSubmit = (data) => {\r\n    dispatch(FetchTotalIncidents(data));\r\n    dispatch(FetchIncidentVolumes(data));\r\n    dispatch(FetchActivecasesbychannel(data));\r\n    dispatch(FetchSubchannel(data));\r\n    dispatch(FetchToptenLocation(data));\r\n    dispatch(FetchCategorlevelcount(data));\r\n    dispatch(FetchPublisherlevelcount(data));\r\n    dispatch(FetchReport(data))\r\n  };\r\n\r\n  const openFilter = () => {\r\n    setPanel(true);\r\n  };\r\n  // const data = {\r\n  //     \"package_name\": localStorage.getItem('dpackage') ? localStorage.getItem('dpackage')  : \"in.itcstore\",\r\n  //     \"fromDate\": localStorage.getItem(\"startDate\"),\r\n  //     \"toDate\": localStorage.getItem(\"endDate\"),\r\n  //     \"country\": countries,\r\n  //     \"category\": categories,\r\n  //     \"publisher\": publishers,\r\n  //     \"channel\": channels,\r\n  //     \"brand\": brands,\r\n  //     \"status\": status,\r\n  //     \"priority\": priorities\r\n  // }\r\n  const gertStartDate = localStorage.getItem(\"startDate\");\r\n  const d = new Date();\r\n  const weekstartdate = d.setDate(d.getDate() - 7);\r\n  const startDate = gertStartDate ? gertStartDate : moment(weekstartdate).format(\"YYYY-MM-DD\");\r\n\r\n  // const data = {\r\n  //   package_name: localStorage.getItem(\"dpackage\"),\r\n  //   fromDate: startDate,\r\n  //   // toDate: localStorage.getItem(\"endDate\") == null ?  moment(new Date().format('YYYY-MM-DD')) : localStorage.getItem(\"endDate\"),\r\n  //   toDate: localStorage.getItem(\"endDate\"),\r\n  //   country: countries,\r\n  //   category: categories,\r\n  //   publisher: publishers,\r\n  //   channel: channels,\r\n  //   brand: brands,\r\n  //   status: status,\r\n  //   priority: priorities,\r\n  // };\r\n\r\n  const localSelectedFilterValues = JSON.parse(\r\n    getLocalStorage(FILTER_CATEGORY_SELECTED_VALUE.SELECTED)\r\n  );\r\n\r\n  const data = {\r\n    package_name: localStorage.getItem(\"dpackage\"),\r\n    toDate: localStorage.getItem(\"endDate\") ? localStorage.getItem(\"endDate\") : moment().format(\"YYYY-MM-DD\") ,\r\n    fromDate: startDate,\r\n    'country': localSelectedFilterValues && localSelectedFilterValues.country && localSelectedFilterValues.country.length > 0 ?\r\n    localSelectedFilterValues.country.sort().join(',')  : countries,\r\n    'category': localSelectedFilterValues && localSelectedFilterValues.category && localSelectedFilterValues.category.length > 0 ?\r\n    localSelectedFilterValues.category.sort().join(',') : categories,\r\n    'publisher': localSelectedFilterValues && localSelectedFilterValues.publisher && localSelectedFilterValues.publisher.length > 0 ?\r\n    localSelectedFilterValues.publisher.sort().join(',') : publishers,\r\n    'channel': localSelectedFilterValues && localSelectedFilterValues.channel && localSelectedFilterValues.channel.length > 0 ?\r\n    localSelectedFilterValues.channel.sort().join(',') : channels,\r\n    'brand': localSelectedFilterValues && localSelectedFilterValues.brand && localSelectedFilterValues.brand.length > 0 ?\r\n    localSelectedFilterValues.brand.sort().join(',') : brands,\r\n    'status': localSelectedFilterValues && localSelectedFilterValues.status && localSelectedFilterValues.status.length > 0 ?\r\n    localSelectedFilterValues.status.sort().join(',') : status,\r\n    'priority': localSelectedFilterValues && localSelectedFilterValues.priority && localSelectedFilterValues.priority.length > 0 ?\r\n    localSelectedFilterValues.priority.sort().join(',') : priorities\r\n  };\r\n\r\n  useEffect(() => {      \r\n    dispatch(FetchTotalIncidents(data));\r\n    dispatch(FetchIncidentVolumes(data));\r\n    dispatch(FetchActivecasesbychannel(data));\r\n    dispatch(FetchSubchannel(data));\r\n    dispatch(FetchToptenLocation(data));\r\n    dispatch(FetchCategorlevelcount(data));\r\n    dispatch(FetchPublisherlevelcount(data));\r\n  }, [package_name]);\r\n  const dashboardData = useSelector((state) => state.dashboard.dashboardData);\r\n\r\n  const incident_data = useSelector((state) => state.dashboard.incident_data);\r\n  const incidentloading = useSelector(\r\n    (state) => state.dashboard.incidentloading\r\n  );\r\n\r\n  const incidentvolume_data = useSelector(\r\n    (state) => state.dashboard.incidentvolumne_data\r\n  );\r\n  const incidentvolumeloading = useSelector(\r\n    (state) => state.dashboard.incidentvolumneloading\r\n  );\r\n\r\n  const activecasebychannel_data = useSelector(\r\n    (state) => state.dashboard.activecases_data\r\n  );\r\n  const activecaseloading = useSelector(\r\n    (state) => state.dashboard.activecaseloading\r\n  );\r\n\r\n  const subchannel_data = useSelector(\r\n    (state) => state.dashboard.subchannel_data\r\n  );\r\n  const subchannelloading = useSelector(\r\n    (state) => state.dashboard.subchannelloading\r\n  );\r\n\r\n  const toptenlocation_data = useSelector(\r\n    (state) => state.dashboard.toptenlocation_data\r\n  );\r\n  const toptenlocationloading = useSelector(\r\n    (state) => state.dashboard.toptenlocation_loading\r\n  );\r\n\r\n  const categorylevelcount_data = useSelector(\r\n    (state) => state.dashboard.categorylevelcount_data\r\n  );\r\n  const categorylevelcountloading = useSelector(\r\n    (state) => state.dashboard.categorylevelcount_loading\r\n  );\r\n\r\n  const publisherlevelcount_data = useSelector(\r\n    (state) => state.dashboard.publisherlevelcount_data\r\n  );\r\n  const publisherlevelcountloading = useSelector(\r\n    (state) => state.dashboard.publisherlevelcount_loading\r\n  );\r\n\r\n  const barchartData = {\r\n    series: [\r\n      {\r\n        name: \"Incident Volume\",\r\n        data: [],\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"bar\",\r\n        height: 350,\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: \"55%\",\r\n          dataLabels: {\r\n            position: \"top\", // top, center, bottom\r\n          },\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n        formatter: function(val) {\r\n          return val;\r\n        },\r\n        offsetY: -20,\r\n        style: {\r\n          fontSize: \"12px\",\r\n          colors: [\"#304758\"],\r\n        },\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: [\"transparent\"],\r\n      },\r\n      xaxis: {\r\n        categories: [],     \r\n      },   \r\n      fill: {\r\n        opacity: 1,\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          // formatter: function (val) {\r\n          //     return \"$ \" + val + \" thousands\"\r\n          // }\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  const donutchartData = {\r\n    series: [],\r\n    options: {\r\n      chart: {\r\n        width: 100,\r\n        type: \"donut\",\r\n      },\r\n      colors: [\r\n        \"#1abc9c\",\r\n        \"#FF4F33\",\r\n        \"#FFF033\",\r\n        \"#83FF33\",\r\n        \"#33FFE0\",\r\n        \"#336BFF\",\r\n        \"#640861\",\r\n        \"#D816A0\",\r\n        \"#D81616\",\r\n        \"#44FA00\",\r\n        \"#581845\",\r\n        \"#1B1C1E\",\r\n        \"#7788DE\",\r\n        \"#713C90\",\r\n        \"#7F9E6F\",\r\n        \"#7f8c8d\",\r\n      ],\r\n      labels: [],\r\n\r\n      states: {\r\n        hover: {\r\n          filter: \"none\",\r\n        },\r\n      },\r\n      responsive: [\r\n        {\r\n          breakpoint: 480,\r\n          options: {\r\n            chart: {\r\n              width: 200,\r\n            },\r\n            legend: {\r\n              position: \"bottom\",\r\n            },\r\n          },\r\n        },\r\n      ],\r\n\r\n      // fill: {\r\n      //     colors:[\"#1abc9c\", \"#2ecc71\", \"#3498db\", \"#9b59b6\", \"#34495e\", \"#16a085\", \"#27ae60\", \"#2980b9\", \"#8e44ad\", \"#2c3e50\", \"#f1c40f\", \"#e67e22\", \"#e74c3c\", \"#ecf0f1\", \"#95a5a6\", \"#f39c12\", \"#d35400\", \"#c0392b\", \"#bdc3c7\", \"#7f8c8d\"]\r\n      // },\r\n    },\r\n  };\r\n\r\n  const subchannelChart = {\r\n    series: [\r\n      {\r\n        name: \"Sub Channels\",\r\n        data: [],\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"bar\",\r\n        height: 350,\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          borderRadius: 4,\r\n          horizontal: true,\r\n          color: \"black\",\r\n          columnWidth: \"55%\",\r\n          dataLabels: {\r\n            position: \"top\", // top, center, bottom\r\n            // left:\"5%\"\r\n          },\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: true,\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n      },\r\n    },\r\n  };\r\n\r\n  const toptenLocationChart = {\r\n    series: [\r\n      {\r\n        name: \"Top10 Location\",\r\n        data: [],\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"bar\",\r\n        height: 350,\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n      },\r\n      plotOptions: {\r\n        bar: {\r\n          borderRadius: 4,\r\n          horizontal: true,\r\n          color: \"black\",\r\n          columnWidth: \"55%\",\r\n          dataLabels: {\r\n            position: \"top\", // top, center, bottom\r\n            // left:\"5%\"\r\n          },\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: true,\r\n      },\r\n      xaxis: {\r\n        categories: [],\r\n        labels: {\r\n\r\n          show: false,\r\n        \r\n               \r\n\r\n      }\r\n      },\r\n      \r\n    },\r\n  };\r\n\r\n  if (incidentvolume_data.length !== 0) {\r\n    incidentvolume_data &&\r\n      incidentvolume_data.map(\r\n        (incvoulume, i) => (\r\n          barchartData.series[0].data.push(incvoulume.count),\r\n          barchartData.options.xaxis.categories.push(moment(incvoulume.inserted_date).format(\"DD-MM-YYYY\")\r\n            )\r\n        )\r\n      );\r\n  }\r\n\r\n  if (activecasebychannel_data.length !== 0) {\r\n    activecasebychannel_data &&\r\n      activecasebychannel_data.map(\r\n        (activecases, i) => (\r\n          donutchartData.series.push(activecases.count),\r\n          donutchartData.options.labels.push(activecases.channel_name)\r\n        )\r\n      );\r\n  }\r\n\r\n  if (subchannel_data.length && subchannel_data.length > 0) {\r\n    subchannel_data &&\r\n      subchannel_data\r\n        .sort((a, b) => (a.count < b.count ? 1 : -1))\r\n        .map(\r\n          (subchannel, i) => (\r\n            subchannelChart.series[0].data.push(subchannel.count),\r\n            subchannelChart.options.xaxis.categories.push(\r\n              subchannel.sub_channel_name\r\n            )\r\n          )\r\n        );\r\n  }\r\n\r\n  if (toptenlocation_data.length !== 0) {\r\n    toptenlocation_data &&\r\n      toptenlocation_data.map(\r\n        (toptenlocation, i) => (\r\n          toptenlocation_data.sort((a, b) => (a.count < b.count ? 1 : -1)),\r\n          toptenLocationChart.series[0].data.push(toptenlocation.count),\r\n          toptenLocationChart.options.xaxis.categories.push(\r\n            toptenlocation.location\r\n          )\r\n        )\r\n      );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button onClick={openFilter}>\r\n                <span className=\"svg-icon svg-icon-xl svg-icon-primary\">\r\n                    <SVG src={toAbsoluteUrl(\"media/svg/icons/Text/Filter.svg\")} />\r\n                </span>\r\n            </Button> */}\r\n      <Row gutter={[8, 8]}>\r\n        <Col xs={12} sm={12} md={5} lg={5} xl={5} className=\"card\">\r\n          <div className=\"p-0 position-relative overflow-hidden\">\r\n            <div>\r\n              <div\r\n                className=\"card-rounded-bottom bg-danger\"\r\n                style={{ height: \"auto\" }}\r\n              >\r\n                <div class=\"card-header border-0 bg-danger py-5\">\r\n                  <h3 class=\"card-title font-weight-bolder text-white\">\r\n                    Incidents\r\n                  </h3>\r\n                </div>\r\n              </div>\r\n              <div className=\"p-5 mt-n15\">\r\n                <div className=\"row m-0\">\r\n                  <div className=\"col bg-light-warning px-6 py-8 rounded-xl mr-7 mb-7\">\r\n                    <span className=\"text-warning font-weight-bold font-size-h6\">\r\n                      Total Incidents\r\n                    </span>\r\n                    {incidentloading === true ? (\r\n                      <p className=\"mt-5\">\r\n                        <Spinner animation=\"border\" variant=\"warning\" />{\" \"}\r\n                      </p>\r\n                    ) : (\r\n                      <h1 className=\"text-warning font-weight-bold font-size-h1 mt-5\">\r\n                        {incident_data && incident_data?.total}\r\n                      </h1>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col bg-light-primary px-6 py-8 rounded-xl mb-7\">\r\n                    <span className=\"text-primary font-weight-bold font-size-h6 mt-2\">\r\n                      Active Cases\r\n                    </span>\r\n                    {incidentloading === true ? (\r\n                      <p className=\"mt-5\">\r\n                        <Spinner animation=\"border\" variant=\"warning\" />{\" \"}\r\n                      </p>\r\n                    ) : (\r\n                      <h1 className=\"text-primary font-weight-bold font-size-h1 mt-5\">\r\n                        {incident_data && incident_data?.active}\r\n                      </h1>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row m-0\">\r\n                  <div className=\"col bg-light-danger px-6 py-8 rounded-xl mr-7\">\r\n                    <span className=\"text-danger font-weight-bold font-size-h6 mt-2\">\r\n                      Resolved Cases\r\n                    </span>\r\n                    {incidentloading === true ? (\r\n                      <p className=\"mt-5\">\r\n                        <Spinner animation=\"border\" variant=\"warning\" />{\" \"}\r\n                      </p>\r\n                    ) : (\r\n                      <h1 className=\"text-danger font-weight-bold font-size-h1 mt-5\">\r\n                        {incident_data && incident_data?.resolved}\r\n                      </h1>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"col bg-light-success px-6 py-8 rounded-xl\">\r\n                    <span className=\"text-success font-weight-bold font-size-h6 mt-2\">\r\n                      In Progress\r\n                    </span>\r\n                    {incidentloading === true ? (\r\n                      <p className=\"mt-5\">\r\n                        <Spinner animation=\"border\" variant=\"warning\" />{\" \"}\r\n                      </p>\r\n                    ) : (\r\n                      <h1 className=\"text-success font-weight-bold font-size-h1 mt-5\">\r\n                        {incident_data && incident_data?.progress}\r\n                      </h1>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col xs={12} sm={12} md={7} lg={7} xl={7} className=\"card\">\r\n          <h5 className=\"text-center mt-5\">Incident Volumes</h5>\r\n          {incidentvolumeloading === false ? (\r\n            <div style={{ maxWidth: \"100%\", overflowX: \"auto\" }}>\r\n              {incidentvolume_data && incidentvolume_data.length > 0 ? (\r\n                <Chart\r\n                  width={700}\r\n                  options={barchartData.options}\r\n                  series={barchartData.series}\r\n                  type=\"bar\"\r\n                />\r\n              ) : (\r\n                <div className=\"text-center mt-5\">\r\n                  {/* <img src=\"../../../../../media/no-data.png\" alt=\"no-dat\" width=\"50\" height=\"50\" /> */}\r\n                  <h6 className=\"mt-5\">No Data Found !</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"content-loader\">\r\n              <div className=\"loader-wrapper\">\r\n                <Spinner animation=\"border\" variant=\"warning\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Col>\r\n        <Col xs={12} sm={12} md={6} lg={6} xl={6} className=\"card\" style={{ height: \"500px\" }}>\r\n          <h5 className=\"text-center mt-5\">Active Cases By Channels</h5>\r\n          {activecaseloading === false ? (\r\n            <div>\r\n              {activecasebychannel_data &&\r\n              activecasebychannel_data.length > 0 ? (\r\n                <Chart\r\n                  options={donutchartData.options}\r\n                  series={donutchartData.series}\r\n                  type=\"donut\"\r\n                />\r\n              ) : (\r\n                <div className=\"text-center mt-5 \">\r\n                  {/* <img src=\"../../../../../media/no-data.png\" alt=\"no-dat\" width=\"50\" height=\"50\" /> */}\r\n                  <h6 className=\"mt-5\">No Data Found !</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"content-loader\">\r\n              <div className=\"loader-wrapper\">\r\n                <Spinner animation=\"border\" variant=\"warning\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Col>\r\n        <Col xs={12} sm={12} md={6} lg={6} xl={6} className=\"card\">\r\n          <h5 className=\"text-center mt-5\">Sub Channels</h5>\r\n          {subchannelloading === false ? (\r\n            <div>\r\n              {subchannel_data && subchannel_data.length > 0 ? (\r\n                <Chart\r\n                  options={subchannelChart.options}\r\n                  series={subchannelChart.series}\r\n                  type=\"bar\"\r\n                />\r\n              ) : (\r\n                <div className=\"text-center mt-5\">\r\n                  {/* <img src=\"../../../../../media/no-data.png\" alt=\"no-dat\" width=\"50\" height=\"50\" /> */}\r\n                  <h6 className=\"mt-5\">No Data Found !</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"content-loader\">\r\n              <div className=\"loader-wrapper\">\r\n                <Spinner animation=\"border\" variant=\"warning\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Col>\r\n\r\n        <Col\r\n          xs={6}\r\n          sm={6}\r\n          md={6}\r\n          lg={3}\r\n          xl={4}\r\n          className=\"card\"\r\n          style={{ height: \"600px\" }}\r\n        >\r\n          <h5 className=\"text-center mt-5\">Top 10 Locations</h5>\r\n          {toptenlocationloading === false ? (\r\n            <div>\r\n              {toptenlocation_data && toptenlocation_data.length > 0 ? (\r\n                <Chart\r\n                  height={555}\r\n                  options={toptenLocationChart.options}\r\n                  series={toptenLocationChart.series}\r\n                  type=\"bar\"\r\n                />\r\n              ) : (\r\n                <div className=\"text-center mt-5\">\r\n                  {/* <img src=\"../../../../../media/no-data.png\" alt=\"no-dat\" width=\"50\" height=\"50\" /> */}\r\n                  <h6 className=\"mt-5\">No Data Found !</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"content-loader\">\r\n              <div className=\"loader-wrapper\">\r\n                <Spinner animation=\"border\" variant=\"warning\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Col>\r\n        <Col\r\n          xs={12}\r\n          sm={12}\r\n          md={6}\r\n          lg={6}\r\n          xl={4}\r\n          className=\"card pt-5 pr-5 pl-5\"\r\n          style={{ height: \"600px\" }}\r\n        >\r\n          <Col>\r\n            <div>\r\n              <div class=\"card-header border-0 p-0\">\r\n                <Row>\r\n                  <Col xs={7} sm={7} md={7} lg={7} xl={7}>\r\n                    <h5 class=\"card-title\">Category level Count</h5>\r\n                  </Col>\r\n                  <Col>\r\n                    <div class=\"d-flex flex-column text-right\">\r\n                      <span class=\"text-dark-75 font-weight-bolder font-size-h4\">\r\n                        {categorylevelcount_data.total_active_cases}\r\n                      </span>\r\n                      <span class=\"text-muted font-size-sm font-weight-bolder\">\r\n                        Total Active Cases\r\n                      </span>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n              {categorylevelcountloading === false ? (\r\n                <div\r\n                  class=\"card-body p-0  mb-5\"\r\n                  style={{ maxHeight: \"480px\", overflowY: \"auto\" }}\r\n                >\r\n                  {categorylevelcount_data && categorylevelcount_data.result &&\r\n                  categorylevelcount_data.result.length === 0 ? (\r\n                    <div className=\"text-center mt-5\">\r\n                      {/* <img src=\"../../../../../media/no-data.png\" alt=\"no-dat\" width=\"50\" height=\"50\" /> */}\r\n                      <h6 className=\"mt-5\">No Data Found !</h6>\r\n                    </div>\r\n                  ) : (\r\n                    categorylevelcount_data && categorylevelcount_data.result &&\r\n                    categorylevelcount_data.result.map((category, i) => (\r\n                      <div class=\"mb-5\" key={i}>\r\n                        <h6 class=\"card-title font-weight-bolderfont-size-h6 mb-2 d-block\">\r\n                          {category.category}\r\n                        </h6>\r\n                        <div class=\"font-weight-bold text-muted font-size-sm\">\r\n                          <span class=\"text-dark-75 font-size-h2 font-weight-bolder mr-2\">\r\n                            {category.active_cases} -\r\n                          </span>\r\n                          Active Cases\r\n                        </div>\r\n                        <ProgressBar\r\n                          now={category.active_cases}\r\n                          variant=\"warning\"\r\n                        />\r\n                      </div>\r\n                    ))\r\n                  )}\r\n                </div>\r\n              ) : (\r\n                <div className=\"content-loader\">\r\n                  <div className=\"loader-wrapper\">\r\n                    <Spinner animation=\"border\" variant=\"warning\" />\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </Col>\r\n        </Col>\r\n        <Col\r\n          xs={12}\r\n          sm={12}\r\n          md={6}\r\n          lg={6}\r\n          xl={4}\r\n          className=\"card pt-5 pr-5 pl-5\"\r\n          style={{ height: \"600px\" }}\r\n        >\r\n          <Col>\r\n            <div class=\"card-header border-0 p-0 \">\r\n              <Row>\r\n                <Col xs={7} sm={7} md={7} lg={7} xl={5}>\r\n                  <h5 class=\"card-title\">Publisher level Count</h5>\r\n                </Col>\r\n                <Col>\r\n                  <div class=\"text-right\">\r\n                    <span class=\"text-dark-75 font-weight-bolder font-size-h4\">\r\n                      {publisherlevelcount_data.total_active_cases}\r\n                    </span>\r\n                    <span class=\"text-muted font-size-sm font-weight-bolder\">\r\n                      Total Active Cases\r\n                    </span>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n            {publisherlevelcountloading === false ? (\r\n              <div\r\n                class=\"card-body p-0  mb-5\"\r\n                style={{ maxHeight: \"460px\", overflowY: \"auto\" }}\r\n              >\r\n                {publisherlevelcount_data && \r\n                publisherlevelcount_data.result &&\r\n                publisherlevelcount_data.result.length === 0 ? (\r\n                  <div className=\"text-center mt-5\">\r\n                    {/* <img src=\"../../../../../media/no-data.png\" alt=\"no-dat\" width=\"50\" height=\"50\" /> */}\r\n                    <h6 className=\"mt-5\">No Data Found !</h6>\r\n                  </div>\r\n                ) : (\r\n                  publisherlevelcount_data && publisherlevelcount_data.result &&\r\n                  publisherlevelcount_data.result.map((publisher, i) => (\r\n                    <div class=\"mb-5\" key={i}>\r\n                      <h6 class=\"card-title font-weight-bolderfont-size-h6 mb-5 d-block\">\r\n                        {publisher.publisher}\r\n                      </h6>\r\n                      <div class=\"font-weight-bold text-muted font-size-sm\">\r\n                        <span class=\"text-dark-75 font-size-h2 font-weight-bolder mr-2\">\r\n                          {publisher.active_cases} -\r\n                        </span>\r\n                        Active Cases\r\n                      </div>\r\n                      <ProgressBar\r\n                        now={publisher.active_cases}\r\n                        variant=\"warning\"\r\n                      />\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <div className=\"content-loader\">\r\n                <div className=\"loader-wrapper\">\r\n                  <Spinner animation=\"border\" variant=\"warning\" />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Col>\r\n        </Col>\r\n      </Row>\r\n          <FilterDrawer\r\n            panel={panel}\r\n            toggleDrawer={toggleDrawer}\r\n            onSubmit={handleSubmit}\r\n          />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}