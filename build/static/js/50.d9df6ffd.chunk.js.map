{"version":3,"sources":["app/views/app/usermanagement/list/index.jsx"],"names":["data","columns","dataField","text","style","width","headerStyle","minWidth","formatter","cellContent","row","className","placement","overlay","id","menu","filter","to","src","toAbsoluteUrl","options","paginationSize","alwaysShowAllBtns","withFirstAndLast","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","paginationTotalRenderer","from","size","disablePageTitle","sizePerPageList","value","index","title","bootstrap4","keyField","pagination","paginationFactory","wrapperClasses","classes","bordered"],"mappings":"kGAAA,oKAgBMA,EAAO,CACT,CACI,GAAM,EAAG,aAAgB,cAAe,KAAQ,6CAChD,OAAU,qDAEd,CACI,GAAM,EAAG,aAAgB,aAAc,KAAQ,gYAC/C,OAAU,wMAIZC,EAAU,CACZ,CACIC,UAAW,eACXC,KAAM,eACNC,MAAO,CAEHC,MAAO,QAEXC,YAAa,CAETC,SAAS,QACTF,MAAO,UAIf,CACIH,UAAW,OACXC,KAAM,OACNC,MAAO,CAEHC,MAAO,QAEXC,YAAa,CAETC,SAAS,QACTF,MAAO,SAEVG,UAAW,SAACC,EAAaC,GACtB,OACI,yBAAKC,UAAU,oBAAoBP,MAAO,CAACC,MAAM,UAC7C,kBAAC,IAAD,CACIO,UAAU,MACVC,QACI,kBAAC,IAAD,CAASC,GAAE,eACNJ,EAAIK,OAIb,8BAAOL,EAAIK,UAM/B,CACIb,UAAW,SACXC,KAAM,UACNC,MAAO,CAEHC,MAAO,QACPC,YAAa,CAEbC,SAAS,QACTF,MAAO,SAGXG,UAAW,SAACC,EAAaC,GACrB,OACI,yBAAKC,UAAU,mBAAmBP,MAAO,CAACC,MAAM,UAC5C,kBAAC,IAAD,CACIO,UAAU,MACVC,QACI,kBAAC,IAAD,CAASC,GAAE,eACNJ,EAAIM,SAIb,8BAAON,EAAIM,YAM/B,CACIb,KAAM,SAENK,UAAW,SAACC,EAAaC,GACrB,OACI,6BACI,kBAAC,IAAD,CAAMO,GAAG,OAAON,UAAU,sCACtB,0BAAMA,UAAU,yCACZ,kBAAC,IAAD,CACIO,IAAKC,YACD,gDAKhB,kBAAC,IAAD,CAAMR,UAAU,iCACZ,0BAAMA,UAAU,wCACZ,kBAAC,IAAD,CACIO,IAAKC,YACD,8CAiB9BC,EAAU,CACZC,eAAgB,EAChBC,mBAAmB,EACnBC,kBAAkB,EAGlBC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,wBArBgB,SAACC,EAAMjB,EAAIkB,GAAX,OAChB,0BAAMxB,UAAU,+CAAhB,WACauB,EADb,OACuBjB,EADvB,OAC+BkB,EAD/B,aAqBAC,kBAAkB,EAClBC,gBAAiB,CAAC,CACdlC,KAAM,KAAMmC,MAAO,IACpB,CACCnC,KAAM,KAAMmC,MAAO,MAIZ,SAASC,IACpB,OACI,yBAAK5B,UAAU,oBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAY6B,MAAM,wBACd,kBAAC,IAAD,KACI,yBAAK7B,UAAU,gBACX,kBAAC,IAAD,CAAMM,GAAG,gBAAgBN,UAAU,0DAAnC,aAMZ,kBAAC,IAAD,KACI,yBAAKA,UAAU,OACX,kBAAC,IAAD,CACI8B,YAAU,EACVC,SAAS,KACT1C,KAAMA,EACNC,QAASA,EACT0C,WAAYC,IAAkBxB,GAC9ByB,eAAe,mBACfC,QAAQ,gEACRC,UAAU","file":"static/js/50.d9df6ffd.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    CardHeaderToolbar,\r\n} from \"../../../../../_metronic/_partials/controls\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { toAbsoluteUrl } from \"../../../../../../src/_metronic/_helpers/index\";\r\nimport { InputGroup, Modal, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\n\r\nconst data = [\r\n    {\r\n        \"id\": 1, \"package_name\": \"in.itcstore\", \"menu\": \"Incident Dashboard,Incident Report,Tickets\",\r\n        \"filter\": \"channel,category,publisher,country,brand,priority\",\r\n    },\r\n    {\r\n        \"id\": 2, \"package_name\": \"itc-wd-app\", \"menu\": \"Incident Dashboard,Incident Report ,Tickets,Add User,Add Package,User Package Mapping,User Management,Verification,Address,Bank Verification,Black List Email,Black List,Company Search,Court Cases,Data Check,Domain Detail,Driving License,Email,Location,Number Data Check,Pan Card Check,Pan Gst Check,Passport Check,Phone,Policy,Vehicle Detail,World Watch Streeming,Bulk Verification\",\r\n        \"filter\": \"web_campaign,web_channel,web_creative_id,web_system_domain,web_placement_id,web_publisher_id,web_fraud_category,web_fraud_sub_category,web_placement_type,web_intermediate_seller,web_adstxt_exists\",\r\n    },\r\n];\r\n\r\nconst columns = [\r\n    {\r\n        dataField: \"package_name\",\r\n        text: \"Package Name\",\r\n        style: {\r\n             \r\n            width: '10px'\r\n        },\r\n        headerStyle: {\r\n            // backgroundColor: 'green',\r\n            minWidth:'200px',\r\n            width: '100px'\r\n         }\r\n    },\r\n    \r\n    {\r\n        dataField: \"menu\",\r\n        text: \"Menu\",\r\n        style: {\r\n             \r\n            width: '10px'\r\n        },\r\n        headerStyle: {\r\n            // backgroundColor: 'green',\r\n            minWidth:'100px',\r\n            width: '100px'\r\n         },\r\n         formatter: (cellContent, row) => {\r\n            return (\r\n                <div className=\"text-ellipsis-250\" style={{width:'250px'}}>\r\n                    <OverlayTrigger\r\n                        placement=\"top\"\r\n                        overlay={\r\n                            <Tooltip id={`tooltip-top`}>\r\n                                {row.menu}\r\n                            </Tooltip>\r\n                        }\r\n                    >\r\n                        <span>{row.menu}</span>\r\n                    </OverlayTrigger>\r\n                </div>\r\n            );\r\n        }\r\n    },\r\n    {\r\n        dataField: \"filter\",\r\n        text: \"Subject\",\r\n        style: {\r\n             \r\n            width: '10px'\r\n        },  headerStyle: {\r\n            // backgroundColor: 'green',\r\n            minWidth:'250px',\r\n            width: '100px'\r\n         },\r\n        \r\n        formatter: (cellContent, row) => {\r\n            return (\r\n                <div className=\"text-ellipsis-50\" style={{width:'200px'}}>\r\n                    <OverlayTrigger\r\n                        placement=\"top\"\r\n                        overlay={\r\n                            <Tooltip id={`tooltip-top`}>\r\n                                {row.filter}\r\n                            </Tooltip>\r\n                        }\r\n                    >\r\n                        <span>{row.filter}</span>\r\n                    </OverlayTrigger>\r\n                </div>\r\n            );\r\n        }\r\n    },\r\n    {\r\n        text: \"Action\",\r\n        \r\n        formatter: (cellContent, row) => {\r\n            return (\r\n                <div>\r\n                    <Link to=\"edit\" className=\"btn btn-icon btn-light btn-sm mx-3\">\r\n                        <span className=\"svg-icon svg-icon-md svg-icon-primary\">\r\n                            <SVG\r\n                                src={toAbsoluteUrl(\r\n                                    \"/media/svg/icons/Communication/Write.svg\"\r\n                                )}\r\n                            ></SVG>\r\n                        </span>\r\n                    </Link>\r\n                    <Link className=\"btn btn-icon btn-light btn-sm\">\r\n                        <span className=\"svg-icon svg-icon-md svg-icon-danger\">\r\n                            <SVG\r\n                                src={toAbsoluteUrl(\r\n                                    \"/media/svg/icons/General/Trash.svg\"\r\n                                )}\r\n                            ></SVG>\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n];\r\n\r\nconst customTotal = (from, to, size) => (\r\n    <span className=\"react-bootstrap-table-pagination-total ml-3\">\r\n        Showing {from} to {to} of {size} Results\r\n    </span>\r\n);\r\n\r\nconst options = {\r\n    paginationSize: 4,\r\n    alwaysShowAllBtns: true, // Always show next and previous button\r\n    withFirstAndLast: false, // Hide the going to First and Last page button\r\n    // hideSizePerPage: true, // Hide the sizePerPage dropdown always\r\n    // hidePageListOnlyOnePage: true, // Hide the pagination list when only one page\r\n    firstPageText: 'First',\r\n    prePageText: 'Back',\r\n    nextPageText: 'Next',\r\n    lastPageText: 'Last',\r\n    nextPageTitle: 'First page',\r\n    prePageTitle: 'Pre page',\r\n    firstPageTitle: 'Next page',\r\n    lastPageTitle: 'Last page',\r\n    showTotal: true,\r\n    paginationTotalRenderer: customTotal,\r\n    disablePageTitle: true,\r\n    sizePerPageList: [{\r\n        text: '10', value: 10\r\n    }, {\r\n        text: '20', value: 20\r\n    }] // A numeric array is also available. the purpose of above example is custom the text\r\n};\r\n\r\nexport default function index() {\r\n    return (\r\n        <div className=\"card card-custom\">\r\n            <Card>\r\n                <CardHeader title=\"User Package Mapping\">\r\n                    <CardHeaderToolbar>\r\n                        <div className=\"card-toolbar\">\r\n                            <Link to=\"/package-user\" className=\"btn btn-primary font-weight-bolder\r\n                     font-size-sm mr-3\">\r\n                                Create</Link>\r\n                        </div>\r\n                    </CardHeaderToolbar>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <div className=\"App\">\r\n                        <BootstrapTable\r\n                            bootstrap4\r\n                            keyField=\"id\"\r\n                            data={data}\r\n                            columns={columns}\r\n                            pagination={paginationFactory(options)}\r\n                            wrapperClasses=\"table-responsive\"\r\n                            classes=\"table table-head-custom table-vertical-center overflow-hidden\"\r\n                            bordered={false}\r\n                        />\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}